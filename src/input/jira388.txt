As an additional nasty point, sometimes this method is called from places like BooleanQueryNodeBuilder, where it goes into an error message to show the user. So this error message also shows the wrong syntax, but it also isn't immediately clear how a QueryNodeBuilder would know what syntax was used to create the QueryNode it has been passed...
I suspect it might be a JVM issue with nothing that we can do to fix it, but couldn't find any other JIRAs reporting the same thing so it made sense to create one.
Hi, could you create a Pull Request and add the link here?  About your branch: I would not use cloneAttributes() because thats slow for this simple case. cloneAttributes() only helps if you want to modify the attributes in the AttributeSource that was created, but is not useful for simple save/restore use cases.  For your case, you should simple use captureState(), save the state object and then call restorestate() instead of clearAttributes(). After restoring you can adapt term text and positions/offsets. In addition when you clone or capture state, the call to clearAttributes() is useless and also slows down. When restoring states, everything is restored, so the additional clearing before is not needed.
I commited the suggested improvements and made a pull request https://github.com/apache/lucene-solr/pull/138.  The NGramTokenFilter probably has the same issue. I can port the fix to that class when everything is correct.
The NGramTokenFilter probably has the same issue. I can port the fix to that class when everything is correct.  Please do! You can update the current PR. Otheriwise PR looks fine.
Thanks, I will merge and commit this after some testing!
Thanks Nathan!
Thanks for filing this issue!  Are all the changes in this patch necessary to get the build to pass?  So to clarify... no code (outside what the patch touches) needs adjustments?
Yes, the build passes for me with only the two additional changes in WordDictionary and SimpleServer.  Warnings for -Xlint:-auxiliaryclass -Xlint:-deprecation -Xlint:-rawtypes -Xlint:-serial -Xlint:-unchecked are all disabled. Each of those causes a lot of errors that I'd like to see eventually followed up on. The auxiliary class warnings are the easiest of those, but still enough work that I felt like it should be a separate task.  I also have a sneaking suspicion that this only affects lucene and solr is somehow ignoring it, but couldn't find anything to confirm that.
Yes on Solr your change is not enabled: https://github.com/apache/lucene-solr/blob/master/solr/common-build.xml#L30  We should also review Solr (maybe in a separate issue).
Hi, IBM JDK8+ should also use OpenJDK internally, so I dont't think hit has much different options. I can try later, I have one installed.  What do we do with Solr? Keep it as it is (it overrides to do no Xlint warnings at all and don't fail on warning). Otherwise I am fine with committing this. But we should really work on removing unsafe and rawtypes warnings from functions module. Now those are completely undetected (no warning, no error).
Here is a patch.
i'm not very familiar with Kuromoji but i believe the lines you 're deleting in this patch are intended to catch comments at the end of a line 芒鈧 not just the begining, ie鈥
It was done long time ago. I don't remember original intention... But it doesn't seem to be common for dictionaries to have comments at the end of line (synonym, stop). Wonder if it's better to follow the same rule.
Patch w/ test case, but it does not show the NPE...
I've just tried with 6.4 and it does indeed seem to have been fixed by LUCENE-7576. I'd not realised I was using the API incorrectly. Thanks!
Phew, thanks for bringing closure Tom Mortimer!
What does it do to performance to create a deflater instance every time? This seems very inefficient.
s/deflater/inflater of course
For fetching the top hits I think it is fine anyway, if there is an issue I suspect it would be more with merging. I can try to run luceneutil with this change next week. Do you have ideas to make it more efficient maybe?
I think its first important to understand how it impacts performance, including worst cases. That means merging with deletes and lots of results and stuff too: not just best-cases like top hits only.  Alternative solutions are possible depending on the impact: e.g. pool managed by the top Decompressor and passed via clone(), and decompress could simply release back to the pool. This is kind of a standard pattern, but of course it adds complexity. We should avoid it if its really not necessary.
I ran a merge that cantains 1M documents from the wikipedia benchmark including deleted docs, in order to test the worst case. Here is what the info stream reports about stored fields before/after the change:  Before:  SM 0 [2017-01-23T15:03:34.956Z; Lucene Merge Thread #0]: 41827 msec to merge stored fields [996093 docs] SM 0 [2017-01-23T15:06:49.785Z; Lucene Merge Thread #0]: 41722 msec to merge stored fields [996093 docs] SM 0 [2017-01-23T15:14:09.943Z; Lucene Merge Thread #0]: 42138 msec to merge stored fields [996093 docs]    After:  SM 0 [2017-01-23T15:17:33.241Z; Lucene Merge Thread #0]: 42050 msec to merge stored fields [996093 docs] SM 0 [2017-01-23T15:20:00.656Z; Lucene Merge Thread #0]: 42320 msec to merge stored fields [996093 docs] SM 0 [2017-01-23T15:22:04.047Z; Lucene Merge Thread #0]: 42520 msec to merge stored fields [996093 docs]    I think this is either noise a an acceptable slow down. That makes sense since we always decompress about 16K of data. Initialization of the Inflater is likely much less costly than decompressing that amount of data.
Thanks for running the benchmark!
Java file for reproducing the error.
since Complexphraseqp parses query twice, you need escape it twice. That is.
Thanks! That helped. Not an issue anymore for me. I think it would make sense to add to ComplexPhraseQueryParser's javadoc the following comment (or something alike):  Special care has to be given when escaping: because some parts of the query might be parsed multiple times, these parts have to be escaped as often.
I set to "critical", because this also breaks our latest release 6.4, which can't be build from source with Java 8 update 121.
I checked it out, it disallows any <script>, also externally linked ones in the -bottom parameter of Javadocs. This is amajor pain. As adding this special allow-javascript parameter is brekaing builds with older versions and its hard to detect the exact build version in Ant, we have 2 options:    Remove prettify.js  Inject the prettify code somehow else into the docs (e.g. by copying all script files together and append them to the javadoc-generated JS file after javadoc succeeds).
This implements first option:    lucene/common-build.xml | 14 --------------  1 file changed, 14 deletions(-)  diff --git a/lucene/common-build.xml b/lucene/common-build.xml index 48cf457..61948bb 100644 --- a/lucene/common-build.xml +++ b/lucene/common-build.xml @@ -2107,20 +2107,6 @@ ${ant.project.name}.test.dependencies=${test.classpath.list}          <link offline="true" href="${javadoc.link}" packagelistLoc="${javadoc.packagelist.dir}/java8"/>          <bottom><![CDATA[            <i>Copyright &copy; ${year} Apache Software Foundation.  All Rights Reserved.</i> -          <script src='{@docRoot}/prettify.js' type='text/javascript'></script> -          <script type='text/javascript'> -            (function(){ -              var oldonload = window.onload; -              if (typeof oldonload != 'function') { -                window.onload = prettyPrint; -              } else { -                window.onload = function() { -                  oldonload(); -                  prettyPrint(); -                } -              } -            })(); -          </script>          ]]></bottom>                    <sources />    I checked our sources. We allready append the CSS of prettify to Javadocs's main CSS files. As Java 8 contains also a Javadocs-generated scripts.js file, we could do the same here. I am working on that...
This would be my proposal.
Sorry last patch had a missing pair of brackets. This fixes it any also works locally. Stupid Javascript! KRRRR!
Attached is a patch that also updates Prettify to latest version. The used one produced Javascript errors in Chrome, so I updated. I also removed the useless additional language plugin files.
Final updates, I think this is committable.  Any suggestions?
Add correct license header to CSS file.
I sent the following message to OpenJDK: http://mail.openjdk.java.net/pipermail/javadoc-dev/2017-January/000281.html
I committed this to master and branch_6x. I will now disable all 6.4 branch builds. If we will have a further bugfix release on this branch, we should backport this. Please reopen in that case.
I backported this change to Lucene 5.5.4, because otherwise we cannot run the build with Java 8 anymore. The problem is the following: Java 7's Javadocs do not add a "script.js" file to the Javadocs output, so this fix injects the javadocs, but because a "script.js" is nowhere referenced in the HTML files, prettyprint is not loaded.  We have the following possibilities:   revert this backport commit, but it prevents smoketester from suceeding (as it checks also Java 8). It also makes it impossible to build the 5.5.4 release with Java 8  add more hacks to inject a script tag into the head element, but that's really complicated as you have to do it in every HTML file!  ignore the fact that Javadocs do not code-prettyprint correctly anymore in Java 7. The Javadocs are fine, just the code exaples are no longer syntax highlighted.    I'd go for the third item. Any comments? If we go this route, I will add a comment to the Changelog that prettyprinting Javadocs is no longer working, if docs are build with Java 7.
Hi Adrien, ramBytesUsed is only ~500KB. Thanks for the info regarding leaking index readers, I'll try to track those down.
Another possibility is that you are affected by this bug: https://issues.apache.org/jira/browse/LUCENE-7657.
Closing now as this is either an IndexReader leak from the application side or a duplicate of LUCENE-7657.
I have found our application was indeed leaking, we basically have something like:  Directory dir = FSDirectory.open(path); DirectoryReader reader = DirectoryReader.open(dir);   reader was closed after used but dir was never closed, therefore causing this leak.  I have not yet verified whether we are impacted by LUCENE-7657.
I was doing more testing and this patch does not work. We only unset the context in createWeight, so wrapper queries like BooleanQuery or ToParentBlockJoinQuery would still have a reference to the index reader if the wrap a TermQuery that has a TermContext. So I guess the only way would be to remove the reference from TermContext to the index readers.
Here is a patch that removes the reader context reference from TermContext.
Michael McCandless - what do you think of this patch?
Thanks Mike Drob; I think this patch looks good, except it makes some tests angry, e.g.:      [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLucene62SegmentInfoFormat -Dtests.method=testRandomExceptions -Dtests.seed=F65CD1D4D104665D -Dtests.locale=zh -Dtests.timezone=Asia/Khandyga -Dtests.asserts=true -Dtests.file.encoding=US-ASCII    [junit4] ERROR   0.03s J3 | TestLucene62SegmentInfoFormat.testRandomExceptions <<<    [junit4]    > Throwable #1: org.apache.lucene.index.CorruptIndexException: Problem reading index. (resource=a random IOException (_e.cfe))    [junit4]    >  at __randomizedtesting.SeedInfo.seed([F65CD1D4D104665D:9E73BF104F0A3FFD]:0)    [junit4]    >  at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:142)    [junit4]    >  at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:74)    [junit4]    >  at org.apache.lucene.index.ReadersAndUpdates.getReader(ReadersAndUpdates.java:143)    [junit4]    >  at org.apache.lucene.index.ReadersAndUpdates.getReadOnlyClone(ReadersAndUpdates.java:195)    [junit4]    >  at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:103)    [junit4]    >  at org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:473)    [junit4]    >  at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:103)    [junit4]    >  at org.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions(BaseIndexFileFormatTestCase.java:563)    [junit4]    >  at org.apache.lucene.index.BaseSegmentInfoFormatTestCase.testRandomExceptions(BaseSegmentInfoFormatTestCase.java:50)    [junit4]    >  at java.lang.Thread.run(Thread.java:745)    [junit4]    > Caused by: java.nio.file.NoSuchFileException: a random IOException (_e.cfe)    [junit4]    >  at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:575)    [junit4]    >  at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:744)    [junit4]    >  at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:119)    [junit4]    >  at org.apache.lucene.store.MockDirectoryWrapper.openChecksumInput(MockDirectoryWrapper.java:1072)    [junit4]    >  at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.readEntries(Lucene50CompoundReader.java:105)    [junit4]    >  at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:69)    [junit4]    >  at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)    [junit4]    >  at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:99)    [junit4]    >  ... 44 more    Maybe we just need to relax that base test case to accept the new CorruptIndexExcpeption as well, and look to its cause to check the exception message?  Also, I think it'd be a bit better to use our expectThrows method in the test case, wrapped around the one line where you try to open an index reader, instead of the @Test(expected = ...), which would pass if CorruptIndexException was hit anywhere in that test case?
Thanks Mike Drob, the new patch looks great, and +1 to do that test cleanup here.  I'll push soon!
Hmm something is still angry:      [junit4] Suite: org.apache.lucene.index.TestMissingIndexFiles    [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestMissingIndexFiles -Dtests.method=testMissingDoc -Dtests.seed=4D7CBCD6B337257 -Dtests.locale=de-CH -Dtests.timezone=Etc/GMT-10 -Dtests.asserts=true -Dtests.file.encoding=US-ASCII    [junit4] FAILURE 0.04s J2 | TestMissingIndexFiles.testMissingDoc <<<    [junit4]    > Throwable #1: junit.framework.AssertionFailedError: Expected exception CorruptIndexException    [junit4]    >  at __randomizedtesting.SeedInfo.seed([4D7CBCD6B337257:6405AAA9369B3658]:0)    [junit4]    >  at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2703)    [junit4]    >  at org.apache.lucene.index.TestMissingIndexFiles.testMissingDoc(TestMissingIndexFiles.java:52)    [junit4]    >  at java.lang.Thread.run(Thread.java:745)    [junit4]    >  Suppressed: java.lang.RuntimeException: MockDirectoryWrapper: cannot close: there are still 1 open files: {_0.cfs=1}    [junit4]    >   at org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:841)    [junit4]    >   at org.apache.lucene.index.TestMissingIndexFiles.testMissingDoc(TestMissingIndexFiles.java:53)    [junit4]    >   ... 36 more    [junit4]    >  Caused by: java.lang.RuntimeException: unclosed IndexInput: _0.cfs    [junit4]    >   at org.apache.lucene.store.MockDirectoryWrapper.addFileHandle(MockDirectoryWrapper.java:732)    [junit4]    >   at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:776)    [junit4]    >   at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:78)    [junit4]    >   at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)    [junit4]    >   at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:99)    [junit4]    >   at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:74)    [junit4]    >   at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:62)    [junit4]    >   at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:54)    [junit4]    >   at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:666)    [junit4]    >   at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:77)    [junit4]    >   at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)    [junit4]    >   at org.apache.lucene.index.TestMissingIndexFiles.lambda$testMissingDoc$0(TestMissingIndexFiles.java:52)    [junit4]    >   at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2694)    [junit4]    >   at org.apache.lucene.index.TestMissingIndexFiles.testMissingDoc(TestMissingIndexFiles.java:52)    [junit4]    >   ... 36 more
Thank you Mike Drob!
Simple patch; I had to also fix CannedTokenStream to set the canned token type for the test case.
Why don't you capture all attributes with captureState and restore them instead of clearAttributes? After that you can change token text and offsets/position. There is a TODO about this in the source code.  The problem mentioned here also affects payloads or other attributes like flags, keyword, or the japanese ones.  I fixed the same issue in NGramFilters a week ago.
Ahh in fact it's already doing the captureState/restoreState here, and so in fact there is no bug!  I wrote the test first, and it was only failing because CannedTokenStream was failing to carry over the type I had asked for.  Here's a new patch, just adding the test case, and removing dead code from WDGF.  Thanks Uwe Schindler.
Hah, thanks for bringing to closure!  Thanks for removing the dead TypeAttribute!  Maybe we should fix CannedTokenStream to do what its comment says (captureState/restoreState).
Looks good! Thanks for adding the comment about the crazyness - I see no better way to do this (without casting)! It is also good that you left the clearAttributes(), because without it, the "extra" attributes maybe added by TokenFilters, would not be cleared and then the Asserting* tests would fail.
Thank you Uwe Schindler!
Patch that uses the SearcherManager(Directory,...) ctor instead of the SM(IndexWriter,...) ctor in the case of opening a suggester over an already built index.  Committing shortly.
Tim Underwood, it usually happens when uniqueKey is duplicated, it causes deleting former parent doc.  It can be verified with org.apache.lucene.search.join.CheckJoinIndex, although it doesn't have main() method.   Adrien Grand, what if will invoke CheckJoinIndex logic lazily somewhere in org.apache.lucene.search.join.QueryBitSetProducer.getBitSet(LeafReaderContext)? It won't cost much as well it should be lazy, but provides more predictable behaviour for users.
I also noticed that I have some deleteByQuery calls that target parents documents but not their children (my assumption being that Solr or Lucene would also delete the corresponding child documents).  Perhaps that is what is causing the orphan child documents.  I'll be sure to explicitly delete those also.
LUCENE-7674.patch introduces CheckingQueryBitSetProducer which checks parent segment's bitset before caching and switches {!parent} {!child} to use it. It laid well, beside of, and it's interesting! BJQParserTest.testGrandChildren(). When we have three levels: parent, child, grand-child and searching for children (2nd level), it requires to include all ascendant levels (parent) in bitset. This, will break existing queries for those who run more than two level blocks. But such explicitly strict behavior solves problems for those who tires to retrieve intermediate levels by [child] then, I remember a couple of such threads in the list.  What do you think?
Adrien Grand , Uwe Schindler, what's your opinion about CheckingQueryBitsetProducer and restricting multilevel blocks?
Ok. I started to scratch the spec at SOLR-10144. Everybody are welcome. Meanwhile, I tried to reproduce this exact failure to come up with more informative message. But it seems like it's impossible - recently redesigned BlockJoinQuery ignores children behind the last parent in segment.
looks good.  i think the @Test can be dropped from the test case.
+1 too
Thank you both for the reviews.
Here is a patch that re-organises how MemoryIndex builds its internal field Info structures.  If an IndexableField is passed to addField(), we re-use as many of its FieldType settings as possible.  I needed to make FieldInfo.setDocValuesType() public, but that brings it into line with .setPointDimensions() so I don't think it's too bad a change?
I think I know why some of this is going on - in NearSpansOrdered stretchToOrder handles figuring out the effective position length it needs to search over and advances each spans to the relevant distance for a match. The second span is advanced just enough so the first instance of 'feed' matches (which satisfies the query), and matchEnd is set to that "feed" occurrence's end position (and matchWidth updated as well), and it stops after that, so NearSpansOrdered effectively does not see that last occurrence of feed when twoPhaseCurrentDocMatches() is called (from getTermToSpans in PhraseHelper).  This first end position of the first "feed" occurrence is what's used instead of the last end position within the slop.
For queries requiring t1 near t2 with enough slop, t1 t1 t2 matches twice, but t1 t2 t2 matches only once. This behaviour was introduced with the lazy iteration, see: https://issues.apache.org/jira/browse/LUCENE-6537?focusedCommentId=14579537&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14579537  This is also a problem for LUCENE-7580 where matching term occurrences are scored: there the second occurrence of t2 will not influence the score because it is never reported as a match.  LUCENE-7398 is probably also of interest here.  To improve highlighting and scoring, we will probably have to rethink how matches of span queries are reported. One way could be to report all occurrences in the matching window, and forward all the sub-spans to after the matching window. Would that be feasible?
I think it would make sense to make Scorer.getWeight final and FilterScorer delegate getChildren.
Here is a patch.
+1  What on earth did this comment mean?   This makes rewritten query equal the original, so that user does not have to .rewrite() their query before searching:    Why would a user have to (in the past) manually rewrite their query before searching ...
This reads to me as the underlying issue of whether ComplexPhrase query parser uses underlying (automatically-constructed) MultiTerm analysis chain (and takes into account multiterm-ready ascii folding filter) or does its own expansion using pure tokens.
I'll dig; looks related to LUCENE-7662.
Thanks Steve Rowe!
CPQP transforms only certain queries to spans. So, the failure is obvious and patches are welcome.
I cannot seem to import stuff from Lucene's analysis module into a unit test that's in Lucene's queryparser module.  E.g.   import org.apache.lucene.analysis.synonym.SynonymFilter; import org.apache.lucene.analysis.synonym.SynonymMap;    doesn't work in org.apache.lucene.queryparser.complexPhrase.TestComplexPhraseQuery. Any ideas on how to test it?
you can try to approach org.apache.lucene.analysis.MockSynonymAnalyzer in TestComplexPhraseQuery
Patch for master. I cannot get the unit tests to run (ant keeps hanging here) so i applied a crude fix and tested it via Solr and it works.  When processing the SynonymQuery i actually have no idea what it should do with more than 1 term, i think it should rewrite itself again but i am really not sure.  Or should it create SpanTermQuery for each term and wrap those in a SpanOrQuery and add that to the list of allSpanClauses?
Here's a patch where each Term in the SynonymQuery is wrapped as SpanTermQuery in a SpanOrQuery, which is then added to the allSpanClauses array.  If there is just one term in the SynonymQuery, it is added as a SpanTermQuery directly.  This seems more appropriate, but don't take my word for it.
New patch, all SynonymQuery's are turned into a SpanOrQuery now and it works, as it seems.  The next query works fine:  {!complexphrase}content_nl:"(emissi* OR investerin*)"~30    But this one doesn't:  {!complexphrase}content_nl:"emissi*"    Prefix or fuzzy queries both return a:  null:java.lang.IllegalArgumentException: Unknown query type "org.apache.luc ene.search.PrefixQuery" found in phrase query string "emissi*"         at org.apache.lucene.queryparser.complexPhrase.ComplexPhraseQueryParser$ComplexPhraseQuery.rewrite(ComplexPhraseQueryParser.java:289)    Haven't got a clue yet why this doesn't work, but have it wrapped in a boolean query does.
what about LUCENE-7695.patch ?
Hello Mikhail Khludnev, your patch works nicely!
Removed fix/version 6.4.2. Thanks Mikhail!
Looks to me like LUCENE-7603 broke this.
OK I see what's happening: this filter (CommonGramsQueryFilter) deletes the unigram tokens, but keeps posLength=2 on the bigram tokens, which makes a disconnected graph, and then the query parser does the wrong thing.  I think the right fix is for it to set posLength to 1 when it drops unigram tokens .. I'll work on a patch.
OK here's a patch fixing CommonGraphsQueryFilter to not create a disconnected graph.  Ere Maijala could you please try this and see if it fixes your use case?  Thanks.  I also added an experimental option to QueryBuilder (base class for query parsers) to disable graph handling, as a safety for other tokenizer components that may create disconnected graphs.
OK thanks for confirming Ere Maijala; I'll fix that test on back port.
Thank you Ere Maijala!
Hi Sebastian Yonekura Baeza, actually, this is by design: it is up to you to downcase the rules you add to the SynonymMap.Builder, and then that ignoreCase option will ignore the case of the incoming tokens during analysis.  I'm sorry the javadocs were missing (so you would not have known this is by design!!), so I've copied over the javadocs from the old SynonymFilter, and I've fixed your test case to down-case the rules, and now it's passing, in the attached patch.
OK I improved the javadocs explaining ignoreCase, and folded in your test case (thank you Sebastian Yonekura Baeza!) here: https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=commitdiff;h=3ad6e41910158a46025ff78330d78a31a7081887
Oh, sorry I missed those docs, given that it was a deprecated class I didn't pay much attention to it.   Indeed, without the javadocs the parameter ignoreCase was kind of misleading. Thank you Michael McCandless for the clarification!
The CJKBigramFilter is working correctly because it sets the position length attribute only if outputUnigrams is set. So only the ShingleFilter is problematic since outputUnigrams is not check when position length is set.  So for instance with shingles of size 2, the input "foo bar baz" would create two tokens  "foo bar" and "bar baz" with a pos len of 2 and an position increment in between which forms a disconnected graph. I'll work on a patch shortly.
Here is one patch for the ShingleFilter. When outputUnigrams is set to false, position length for a shingle of size N is the number of position created by shingles of smaller size: (N - minShingleSize) + 1. Michael McCandless can you take a look ?
+1 to the idea, but some tests are failing with the patch:      [junit4] Tests with failures [seed: 4D8AED66905F8617]:    [junit4]   - org.apache.lucene.analysis.shingle.ShingleFilterTest.testOutputUnigramsIfNoShinglesSingleTokenCase    [junit4]   - org.a
Thanks Steve ! I pushed a new patch that solves the tests failures.
I'm beasting 1000 iterations of TestRandomChains with the patch, and run 110 found the following reproducing seed - maybe it's ShingleFilter's fault?  (I didn't investigate further):  edit: this seed fails on unpatched master, so the patch on this issue isn't to blame.  I created a separate issue: LUCENE-7711     [junit4] Suite: org.apache.lucene.analysis.core.TestRandomChains    [junit4]   2> TEST FAIL: useCharFilter=false text='\ufac4\u0552H \ua954\ua944 \ud0d2\uaddd\ub6cb\uc388\uc344\uca88\ud224\uc462\uaf42 g '    [junit4]   2> Exception from random analyzer:     [junit4]   2> charfilters=    [junit4]   2>   org.apache.lucene.analysis.charfilter.HTMLStripCharFilter(java.io.StringReader@3fb9d00e, [<HOST>, <HANGUL>, <IDEOGRAPHIC>, <SOUTHEAST_ASIAN>])    [junit4]   2> tokenizer=    [junit4]   2>   org.apache.lucene.analysis.standard.StandardTokenizer(org.apache.lucene.util.AttributeFactory$1@c893af9b)    [junit4]   2> filters=    [junit4]   2>   org.apache.lucene.analysis.miscellaneous.KeywordRepeatFilter(ValidatingTokenFilter@7e1e9fe2 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,flags=0,payload=null,keyword=false)    [junit4]   2>   org.apache.lucene.analysis.cjk.CJKBigramFilter(ValidatingTokenFilter@12c3fb1b term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,flags=0,payload=null,keyword=false)    [junit4]   2>   org.apache.lucene.analysis.shingle.ShingleFilter(ValidatingTokenFilter@31c463b5 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,flags=0,payload=null,keyword=false, 49)    [junit4]   2>   org.apache.lucene.analysis.in.IndicNormalizationFilter(ValidatingTokenFilter@3f72787 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,flags=0,payload=null,keyword=false)    [junit4]   2> offsetsAreCorrect=false    [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestRandomChains -Dtests.method=testRandomChains -Dtests.seed=E532502212098AC7 -Dtests.slow=true -Dtests.locale=ko-KR -Dtests.timezone=Atlantic/Jan_Mayen -Dtests.asserts=true -Dtests.file.encoding=UTF-8    [junit4] ERROR   0.76s | TestRandomChains.testRandomChains <<<    [junit4]    > Throwable #1: java.lang.IllegalArgumentException: startOffset must be non-negative, and endOffset must be >= startOffset; got startOffset=10,endOffset=9    [junit4]    >        at __randomizedtesting.SeedInfo.seed([E532502212098AC7:D8D37943551B9707]:0)    [junit4]    >        at org.apache.lucene.analysis.tokenattributes.PackedTokenAttributeImpl.setOffset(PackedTokenAttributeImpl.java:110)    [junit4]    >        at org.apache.lucene.analysis.shingle.ShingleFilter.incrementToken(ShingleFilter.java:345)    [junit4]    >        at org.apache.lucene.analysis.ValidatingTokenFilter.incrementToken(ValidatingTokenFilter.java:67)    [junit4]    >        at org.apache.lucene.analysis.in.IndicNormalizationFilter.incrementToken(IndicNormalizationFilter.java:40)    [junit4]    >        at org.apache.lucene.analysis.ValidatingTokenFilter.incrementToken(ValidatingTokenFilter.java:67)    [junit4]    >        at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkAnalysisConsistency(BaseTokenStreamTestCase.java:731)    [junit4]    >        at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:642)    [junit4]    >        at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:540)    [junit4]    >        at org.apache.lucene.analysis.core.TestRandomChains.testRandomChains(TestRandomChains.java:853)    [junit4]    >        at java.lang.Thread.run(Thread.java:745)    [junit4] OK      1.64s | TestRandomChains.testRandomChainsWithLargeStrings    [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {dummy=PostingsFormat(name=LuceneVarGapFixedInterval)}, docValues:{}, maxPointsInLeafNode=542, maxMBSortInHeap=7.773738401752009, sim=RandomSimilarity(queryNorm=false): {}, locale=ko-KR, timezone=Atlantic/Jan_Mayen    [junit4]   2> NOTE: Linux 4.1.0-custom2-amd64 amd64/Oracle Corporation 1.8.0_77 (64-bit)/cpus=16,threads=1,free=400845920,total=514850816    [junit4]   2> NOTE: All tests run in this JVM: [TestRandomChains]    [junit4] Completed [1/1 (1!)] in 6.03s, 2 tests, 1 error <<< FAILURES!
+1, thanks Jim Ferenczi!
Thanks Steve Rowe and Michael McCandless !
There's no fix version here.  CHANGES.txt says it's in 6.5.0.  (looking for possible causes of a shingle filter problem confirmed in Solr 6.3 and 6.4, this couldn't be the cause)
Shawn Heisey one shingle filter problem is fixed in LUCENE-7708 and appears in 6.3 when the support for graph analysis has been added to the QueryBuilder.  The other shingle filter problem I can think of is when the number of paths is gigantic and produces an OOM. I opened LUCENE-7747 to fix this. Although I think that the workaround for now is to be disable graph query analysis when the analyzer contains a shingle filter that produces shingles of different size. The graph analysis in this case builds all possible path since each position has different side paths.
Jim Ferenczi what we do after committing/all-done is "Resolve" the issue (not "Close").  That dialog box will give you the option to set the fix-version.  Later on during the release process, there should be a JIRA step that involves bulk-closing all issues resolved for this version.
Thanks David Smiley. I updated the status.
Looks like 6.5.0 isn't a valid version yet. Easy enough to add, but if I do so, would I be doing the right thing?  I see Jim already set the version to 6.5, but FYI Shawn Heisey, historically people have excluded the trailing ".0" in minor release labels here on JIRA.
Another reproducing failure on branch_7_0, from my Jenkins:   Checking out Revision 6cdc0060e5c3b93f0764d7e8e441fa21931fe60d (refs/remotes/origin/branch_7_0) [...]    [junit4] Suite: org.apache.lucene.analysis.core.TestRandomChains    [junit4]   2> TEST FAIL: useCharFilter=true text='arr]] [[ja:\u30de\u30b7\u30e5\u30fc\u30fb\u30d1\u30fc\u30eb '    [junit4]   2> Exception from random analyzer:     [junit4]   2> charfilters=    [junit4]   2> tokenizer=    [junit4]   2>   org.apache.lucene.analysis.standard.StandardTokenizer()    [junit4]   2> filters=    [junit4]   2>   org.apache.lucene.analysis.miscellaneous.KeywordRepeatFilter(ValidatingTokenFilter@218bc4e4 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1,keyword=false)    [junit4]   2>   org.apache.lucene.analysis.core.DecimalDigitFilter(ValidatingTokenFilter@48b9b511 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1,keyword=false)    [junit4]   2>   org.apache.lucene.analysis.miscellaneous.HyphenatedWordsFilter(ValidatingTokenFilter@6800dfe4 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1,keyword=false)    [junit4]   2>   org.apache.lucene.analysis.cjk.CJKBigramFilter(ValidatingTokenFilter@507e81ab term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1,keyword=false)    [junit4]   2> offsetsAreCorrect=false    [junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.    [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestRandomChains -Dtests.method=testRandomChains -Dtests.seed=2577EBB6844BD489 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=en-ZA -Dtests.timezone=America/Argentina/Jujuy -Dtests.asserts=true -Dtests.file.encoding=US-ASCII    [junit4] ERROR   18.9s J2 | TestRandomChains.testRandomChains <<<    [junit4]    > Throwable #1: java.lang.IllegalArgumentException: startOffset must be non-negative, and endOffset must be >= startOffset, and offsets must not go backwards startOffset=11,endOffset=13,lastStartOffset=13 for field 'dummy'    [junit4]    >  at __randomizedtesting.SeedInfo.seed([2577EBB6844BD489:1896C2D7C359C949]:0)    [junit4]    >  at org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:769)    [junit4]    >  at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:431)    [junit4]    >  at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:393)    [junit4]    >  at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:239)    [junit4]    >  at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:481)    [junit4]    >  at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1717)    [junit4]    >  at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1462)    [junit4]    >  at org.apache.lucene.index.RandomIndexWriter.addDocument(RandomIndexWriter.java:171)    [junit4]    >  at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:650)    [junit4]    >  at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:540)    [junit4]    >  at org.apache.lucene.analysis.core.TestRandomChains.testRandomChains(TestRandomChains.java:856)
... how it deals with the initial state that all sub spans have a start position of -1.  There is no need for that, the intermediate data structure is a priority queue that is not a Spans itself.  If the names of this priority queue (SpanTotalLengthEndPositionWindow) and its methods (startDocument/nextPosition) are misleading, they need to be improved.  The core search tests and precommit pass.
OK, I just applied the patch to understand how it works. It looks good to me, I'll merge it soon. Thanks Paul!
Thanks Adrien.
I think that in org.apache.lucene.search.uhighlight.MultiTermHighlighting.extractAutomata() condition "if (query instanceof AutomatonQuery)" should be the last in "if" chain
Hello Dmitry. - I am attaching potential test case adapted from your code snippet (no pun intended) in the description. The test passes locally for me though. Could you perhaps try running it locally too and adapt/adjust it and with/without the MultiTermHighlighting change you mention? Thanks. - Christine
At some point after MultiTermHighlighting.java was first written, PrefixQuery was altered to be a subclass of AutomatonQuery.  So PrefixQuery detection could simply be removed now, I think, since it's handled via AutomatonQuery condition.  I'm working on debugging to see why this fails & a proper test.  (the test would go in TestUnifiedHighlighterMTQ by the way)
Here's my take on it:  The UnifiedHighlighter (and PostingsHighlighter from which it derives) processes the MultiTermQueries (e.g. wildcards) in the query and creates multiple CharacterRunAutomaton intended to match the same things.  CharacterRunAutomaton takes a Automaton as input, and when it does it's processing, it matches the Character code points (integers from 0 to 0x10FFFF) against the integers in the Automaton.  However, this strategy assumes that the Automaton was constructed based on character code points.  But AutomatonQuery.getAutomaton is intended to match byte by byte (integers 0 to 255).  PrefixQuery.toAutomaton will get 2 bytes for the the "脩聫" in BytesRef form, and add 2 states.  This does not line up with the assumptions of CharacterRunAutomaton.  A short term immediate "fix" is simply to put AutomatonQuery last in the if-else list as Dmitry indicated.  As such, PrefixQuery will work again.  This was broken by LUCENE-6367 (Lucene 5.1).  TermRangeQuery, which also now extends AutomatonQuery, will likewise work 芒鈧 broken by LUCENE-5879 (Lucene 5.2).  Again, back when MultiTermHighlighting was first written, neither of those queries extended AutomatonQuery.  But there will be bugs for other types of AutomatonQuery (namely WildcardQuery and RegexpQuery) that have yet to be reported.  Robert Muir or Michael McCandless I wonder if you have any thoughts on how to fix this.  An idea I have is to not use a CharacterRunAutomaton in the UnifiedHighlighter; use a ByteRunAutomaton instead.  Then, add ByteRunAutomaton.run(char[] ...etc) that converts each character to the equivalent UTF8 bytes to match.  Even with that, I wonder if this points to areas to improve the automata API so that people don't bump into this trap in the future.  For example, maybe have the Automata self-report if it's byte oriented, Unicode codepoint oriented, or something custom.  Then, RunAutomaton could throw an exception if there is a mis-match.  However that would be a runtime error; maybe the Automata could be typed.  Any way, what I'd like to do is do a short term fix that addresses many common cases and the title of this issue.  And then do a more thorough fix in a follow-on issue.  Ishan Chattopadhyaya do you think this could go into 6.4.2 or are you only looking for "critical" issues?  It's debatable what's critical and not.  This bug has been around since 5.1 so perhaps it isn't.  (a patch will follow shortly)
Here's a patch. It fixed the MultiTermHighlighting class in both the postingshighlight package as well as uhighlight.  It adds a test method to TestUnifiedHighlighterMTQ.  I also beefed up the test for a related method testWhichMTQMatched to avoid potential inadvertent changes to the CharRunAutomata toString that people might depend on.  It appears there was no breakage in this case but until I added more query types, wether it did or didn't break wasn't apparent.
IntelliJ IDEA has clued me into this else-if having dead code paths for a long while now here and I'm kicking myself for putting it off 芒鈧 LOL.
David Smiley, I don't mind including this fix, if you think this is a low risk fix and should be included. Feel free to backport this one to the release branch. I'm anyway waiting for SOLR-10215 as of now.
Closing.  I'll create a linked follow-up bug issue for WildcardQuery (also applies to Regexp) where we can discuss how to deal with that 芒鈧 the more overall fix.  I don't think that one should hold up a 6.4.2.  It'll likely result in removing the PrefixQuery and TermRangeQuery sections in MultiTermHighlighting.
Ishan, can you commit this change to master and branch_6x?
Wow, this is a great catch Dmitry Malinin!  Thank you for opening the precursor issue.  AutomatonQuery.getAutomaton really must return a UTF8-oriented automaton because that matches how the terms are indexed into Lucene, and what the automaton will be intersected with, to run the query.  We should fix the javadocs to say this.  And it is sort of annoying that these differences are not strongly typed, but the Automaton class is really agnostic to what ints you are putting onto its transitions.  But, yeah, for highlighting, we are operating in UTF16 space, and so I think we need some way to have the CharacterRunAutomaton interface on top of a UTF8 automaton?  Maybe we should abstract out a separate interface that MultiTermHighlighting would use?  It seems it only uses the run method, to test if a given term is accepted?  And then, as you suggested, we could easily convert the incoming char[] to UTF8 BytesRef and use the ByteRunAutomaton.run on that.
Michael McCandless What do you think of the patch?  In particular, I wonder what you think of:   AutomatonQuery.isAutomatonBinary().  This is a very simple/innocent addition.  It's a shame Automaton.isBinary (or something similar) doesn't exist.  See my TODO last paragraph above.  Also note even if that were done, the CompiledAutomaton isn't exposed by AutomatonQuery any way; so we'd need an accessor.  Perhaps alternatively AutomatonQuery might expose both a CharRunAutomaton and ByteRunAutomaton (i.e. move some of the code in this patch to there)?  If that wouldn't potentially be useful to other users then nevermind.  The approach to convert chars to bytes at each step
Beasting with the repro line (after s/test/test-nocompile/ [1]) on the tip of branch_6x failed 3/150 iterations on my box -> 2% failure rate.  [1] ant compile-test ; (for a in {1..500} ; do ant test-nocompile <remainder of repro line> ; done) 2>&1 | tee ~/output.txt
I'm suprised the java8 javadocs/linter don't warn about this.  We don't have a full HTML validator involved. In addition, for HTML5, the entity escaping can be left out, if it is unambiguous. This mimics the behaviour most browsers out there always had (because most web devs out there did this wrong). So the produced HTML is valid (HTML5) and also leads to no problems in HTML4 browsers. But we should still fix it.  The requirement to escape also attributes is a requirement of just Java 9's Javac (which is a bug from the HTML5 perspective, but a good thing, too).
There is also another TODO (separate issue, I'll open one): pegdown (the markdown processor) is also incompatible to Java 9; but it reached its end of life. The developer points to a new replacement lib - I just have to rewrite the Java code a bit. This is on my "mental TODO list...." since build 154 of Java 9.
Patch fixing this issue. You can still not build full documentation because of failing "pegdown" processor, but that's a separate issue.
Thanks Hoss Man for reminding me!
FYI, here is the HTML5 definition of "ambiguous ampersand": https://www.w3.org/TR/html5/syntax.html#syntax-ambiguous-ampersand In fact, Java 9's Javadocs and Javac parser do not use that definition, which may be seen as a bug, but in fact this definition is just horrible and was added to make sloppy web developers happy...
Thanks chillon.m!
This is a bug indeed! Would you like to submit a patch? We are soon going to release 6.5.1 so I think it would be nice to have that fix in.
I went ahead and worked on a patch to have it for 6.5.1 in time.
Adrien Grand , thank you for working the on fix. I dont have lucene development set up here, but the patch may still need one more fix to work correctly (looking at 6.5.0 with your patch). Actually LRUQueryCache#CachingWrapperWeight not delegating the scorerSupplier was one of the problem, but there is another problem related to BulkScorer, if you look at the last part of the stack trace:  ...    at org.apache.lucene.search.BooleanWeight.scorer(BooleanWeight.java:381)    at org.apache.lucene.search.Weight.bulkScorer(Weight.java:160)    at org.apache.lucene.search.BooleanWeight.bulkScorer(BooleanWeight.java:375)    at org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.cache(LRUQueryCache.java:704)    at org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.bulkScorer(LRUQueryCache.java:787)    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:666)    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473)  BooleanWeight.java:385 always get the score with randomAccess=false, which again will ignore any IndexOrDocValuesQuery improvements. Weight#bulkScorer should probably use the scorerSupplier method instead of the scorer method internally.
Hi Martin, thanks for looking at the patch. It is expected that BulkScorer always gets a scorer with randomAccess=false since bulk scorers always need to return all matching documents. I don't think this is an issue.  The stack trace that you shared happened because the query cache noticed that a BooleanQuery that is part of your query tree (it might be your top-level query) is being reused, and so it decides to build a cache entry for it (LRUQueryCache$CachingWrapperWeight.cache). Building a cache entry requires to consume all documents that match the query, so it makes sense that the scorer is created with randomAccess=false. Note that the fact that the boolean scorer is created with randomAccess=false does not necessarily mean that all scorers of sub clauses of the BooleanQuery will be created with randomAccess=false too: if the query is a conjunction then only the clauses that have the lowest cost will be created with randomAccess=false. As a consequence, the IndexOrDocValues optimization still applies if the range query is not the least costly clause.
Here is a patch.
+1 good catch!
I got to the bottom of this one; it's tricky.  I see two issues:  1. The UH's PhraseHelper uses WeightedSpanTermExtractor to convert the query to a SpanQuery.  WSTE has no knowledge of  ComplexPhraseQuery so it has some fallback logic.  PhraseHelper overrides isQueryUnsupported but it has a lingering TODO with a return true, thus any any query not known in advance is not going to be highlighted.  I think this should be modified to return false.  I did that locally and I also found it to then be necessary to override getLeafContext() to return a dummy context.  The PH can't produce a real leaf context (here) because this is the stage at which it is merely analyzing the query, no possible wildcard expansion is done (yet).  The query worked in the original Highlighter because there is no split phase.  2. ComplexPhraseQueryParser produces a special Query subclass ComplexPhraseQuery.  CPQ implements rewrite() that also calls rewrite() on the clauses.  It expects a real (not a dummy) leaf context.  So this works from a query execution standpoint, but I think it would be more friendly with the UH if CPQ didn't cascade the rewrite.  It's not a simple matter of commenting out the cascaded rewrite though... I will investigate further when I have more time.
This behaviour is irrational  Well, this is not exactly true. This is a token filter, meaning it can be applied on top on any set of other token filters. Now imagine that someone is applying edge n-grams on top of synonyms, this could generate broken offsets (going backwards for instance) so keeping the original offsets is the only safe move. A workaround to this issue is to use the (edge) n-gram tokenizers (as opposed to filters), which also have a protected isTokenChar method that can be overriden in case you want to eg. split on whitespaces.
This behaviour is irrational  Well, this is not exactly true. This is a token filter, meaning it can be applied on top on any set of other token filters. Now imagine that someone is applying edge n-grams on top of synonyms, this could generate broken offsets (going backwards for instance) so keeping the original offsets is the only safe move. A workaround to this issue is to use the (edge) n-gram tokenizers (as opposed to filters), which also have a protected isTokenChar method that can be overriden in case you want to eg. split on whitespaces.
Now imagine that someone is applying edge n-grams on top of synonyms, this could generate broken offsets (going backwards for instance) so keeping the original offsets is the only safe move But why one feature should break another? I don't use synonyms or something like that, but I have no possibility to use token filter with properly offsets.  A workaround to this issue is to use the (edge) n-gram tokenizers (as opposed to filters) Such workaround applicable only to cases when input text can be simple splitted on specified characters. In my case I want to use icu_tokenizer before edge_ngram for properly split by words. For example, imagine japan language.
Moreover, I would not be surprised that highlighting the entire token is a desired behaviour for some users.  This is correct. Modifying offsets inside a TokenFilter is not going to be correct for highlighting for the reasons you are mentioning. This is a general issue with all token filters that are splitting tokens: The "famous" example is WordDelimiterFilter.  Assigning offsets is the responsibility of tokenizers. Tokenfilters should just look at tokens and modify them, but not split them or change their offsets.   In addition, highlighting is not meant to produce "exact" explanations of every analysis step. It is more meant to allow highlighting whole tokens afterwards, so the user has an idea, which token was responsible for a hit.
Assigning offsets is the responsibility of tokenizers. Tokenfilters should just look at tokens and modify them, but not split them or change their offsets. But tokenizer can be only one, so there is no way to get tokens different than produced by specific single tokenizer. No way to customize without writing your own tokenizers. It is possible to combine token filters, but not tokenizers.  In addition, highlighting is not meant to produce "exact" explanations of every analysis step. It is more meant to allow highlighting whole tokens afterwards, so the user has an idea, which token was responsible for a hit. I think this should be decided by Lucene users, not by anyone else. When you project your index and search behaviour, only you can decide how it should work based on your project requirements.
Sigh, +1.
+1  From http://mail-archives.apache.org/mod_mbox/lucene-java-user/201611.mbox/%3c36FCFD77-D873-4757-9D16-E89016F169E6@gmail.com%3e, where I most recently responded to a user question about the situation - this should be useful as a seed for javadoc fixes
OK thanks for the history here Steve Rowe ... I will fixup the javadocs based on this.
Patch, improving the javadocs and adding a couple test cases ...
+1  Tests look good.  I like your simplification of my explanation ("[long tokens] are chopped up at [maxTokenLength] and emitted as multiple tokens"); a more precise description about rule matching, including the possibility of emitted tokens not being e
Thanks Steve Rowe; I'll do the same for UAX29URLEmailTokenizer.
does the file smapi-1.0-war-exec.jar contains the war file smapi-1.0.war ? As it looks to not be here: how do you configure the mojo in your pom ? 
I have unziped the smapi1.0-war-exec.jar file and in it I see the smapi-1.0.war file. I think it is finding the war, other wise I would be seeing the zip file exception that I saw when running it from the wrong directory.   Here is how I have the plugin configured in the pom: <plugin>         <groupId>org.apache.tomcat.maven</groupId>         <artifactId>tomcat7-maven-plugin</artifactId>         <version>2.0-SNAPSHOT</version>         <executions>           <execution>             <id>tomcat-run</id>             <goals>               <goal>exec-war-only</goal>             </goals>             <phase>package</phase>             <configuration>               <path>/smapi-1.0</path>             </configuration>           </execution>         </executions>       </plugin>  
should be fixed now. issue with path started with / If you still have issues add a comment with stack trace. Thanks. 
Integrated in TomcatMavenPlugin #56 (See https://builds.apache.org/job/TomcatMavenPlugin/56/)     MTOMCAT-103 Executable War fails to run with a NullPointerException do not record jar entry starting with / remove it.  olamy : http://svn.apache.org/viewvc/?view=rev&rev=1196179 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractExecWarMojo.java  /tomcat/maven-plugin/trunk/tomcat7-war-runner/src/main/java/org/apache/tomcat/maven/runner/Tomcat7Runner.java   
That fixed it for me.  Thanks so much for your fast resolution.  This is an amazing plug-in keep up the good work. 
some fixes has been committed do you still have the issue ? 
It looks the war generated by your project is not generated. Does your project produce a war file ? To trigger exec-war-only goal in the package phase, your execution block must be in build/plugins/plugin rather than in pluginManagement section. 
see http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/mail-lists.html Can I have a sample application  to reproduce that ? 
Here is the simple app attachment, whose executable war runs wrongly, with the error of java.io.FileNotFoundException: jndi:/localhost/BasicSetup/WEB-INF/faces-config.xml 
can you try with enabling naming:  <enableNaming>true</enableNaming>   
Thanks for the fast response !  I added that in the plugin configuration, still the same FNFE. And then i tried experimenting the 'useNaming', setting both of the config to true and false, but still the same FNFE.  Just a wild guess from googling around if this has something to do with the classloader classpath where it couldnt see the content of the war that has the WEB-INF/faces-config.xml ? 
any way you provide a sample project to reproduce that ? BTW some changes has been applied could you retry if you still have the issues ? 
please provide more infos. 
Just attached a patch   For a prettified preview, go to:   https://github.com/apache/tomcat-maven-plugin/pull/1/files 
to prevent too much complicated xml configuration. I would prefer : ExtraDependency extend Dependency 
you are using mvn 2.x ? 
Yep, 2.2.1 
Thank you  At the moment I have to keep the software I'm co-working on, at version 2.2.1 because it's quite complex and many components and features need to be re-thinked before we can upgrade to mvn 3.  We will approach mvn 3 during 2012 for sure, but for the next release we really look forward for your fix   Thank you again for your great work and quick response 
patch not used. Implemented with a more easy solution. SNAPSHOT deployed to http://repository.apache.org/content/groups/snapshots-group/  reopen if you still have issue. 
Integrated in TomcatMavenPlugin #66 (See https://builds.apache.org/job/TomcatMavenPlugin/66/)     MTOMCAT-106 tomcat7-maven-plugin extraDependency not working with class not found attached patch not used, implements a more simple solution.  olamy : http://svn.apache.org/viewvc/?view=rev&rev=1203144 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractExecWarMojo.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/ExtraDependency.java   
Thank you, works fine 
I've tested this patch on Mac OSX 10.6.8, Fedora Core 16, and Redhat Linux 5.4  It handles, httpPort not being set so only https starts up it adds 3 options to the startup -keyAlias -clientAuth It checks for the 6 -Djavax.net.ssl properties for setting up key and trust stores  I also added PasswordUtil to allow the passwords to be obfuscated (a security requirement for some systems is no passwords in clear text ... I know obfuscation is like closing your front door and hoping know one uses the peep hole).  I've confirmed function as best I can with and without http turned on and with and without clientAuth.  It appears to be working correctly. 
@Brad looks a good patch. Note the maven plugin use the maven code formatting: http://maven.apache.org/developers/conventions/code.html 
btw regarding this obfuscate stuff I wonder how it's secured as the deobfuscate method is open source  
@Oliver 1. Sorry about the formatting I tried to follow what you had, as odd as it looked.  If you can't take it as is then I'll have to fix it on Monday. 2. As for the obfuscate stuff, its most definitely breakable but at least 'protects' it from prying 
why not reading the password from a file ?  And -httpsPasswordFile= (the file will contains only the password) this comment "Lifted from Jetty org.mortbay.jetty.security.Password" can/will lead in some ip issues. With such source code import, license headers must be preserve and I don't see that in your patch. 
Reading plain text from a file wouldn't help the security scan software would still find it, it needs to be non-human-readable.  The code http://grepcode.com/file_/repo1.maven.org/maven2/org.mortbay.jetty/jetty/6.1.11/org/mortbay/jetty/security/Password.java/?v=source Uses the Apache 2.0 License which says I can reuse the code and I just put your style of comment in the header so it would match the rest of your code. 
1. Cleaned up formatting  2. Added a @see to PaswordUtil pointing back to Jetty Source  3. Will apply cleanly after your patch to MTOMCAT-109 
applied. SNAPSHOT will deployed by jenkins build. Reopen if any issues. Thanks for the patch! 
Integrated in TomcatMavenPlugin #75 (See https://builds.apache.org/job/TomcatMavenPlugin/75/)     MTOMCAT-108 The httpsPort flag starts another http thread not an https thread Submitted by Brad Giaccio.  olamy : http://svn.apache.org/viewvc/?view=rev&rev=1221023 Files :    /tomcat/maven-plugin/trunk/tomcat7-war-runner/src/main/java/org/apache/tomcat/maven/runner/PasswordUtil.java  /tomcat/maven-plugin/trunk/tomcat7-war-runner/src/main/java/org/apache/tomcat/maven/runner/Tomcat7Runner.java  /tomcat/maven-plugin/trunk/tomcat7-war-runner/src/main/java/org/apache/tomcat/maven/runner/Tomcat7RunnerCli.java   
@Keith until a release  Currently you can use 2.0-SNAPSHOT to test. see http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/snapshot-test.html 
@Olivier.  Sorry, I meant when will it be available in the SNAPSHOT?  Currently the SNAPSHOT is showing a last build date of Novermber 11th, 2011. 
@Keith what Repository are you looking in https://repository.apache.org/content/groups/snapshots-group/org/apache/tomcat/maven/tomcat7-war-runner/2.0-SNAPSHOT/ The files from Tue Dec 20 00:16:29 UTC 2011, the ones after  that (i.e Today) appear to have fi
http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/snapshot-test.html says https://repository.apache.org/content/groups/snapshots-group 
My bad, I was looking at the old repo location. --Keith   On Wed, Dec 21, 2011 at 1:51 PM, Olivier Lamy (Commented) (JIRA) <  
which maven version are you using ? 
apologizes mvn --version output attached to environment field 
Thanks for the work around - I've no problem with upgrading maven anyway 
Integrated in TomcatMavenPlugin-mvn3.x #112 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/112/)     MTOMCAT-118 tomcat7:run wont accept additionalClasspathDir arguments before 3.0.3 maven doesn't support mojo fields Collections other than String  olamy : http://svn.apache.org/viewvc/?view=rev&rev=1240234 Files :    /tomcat/maven-plugin/trunk/tomcat6-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat6/RunMojo.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/RunMojo.java   
The reason for this is actually in org.apache.catalina.startup.ContextConfig processContextConfig implementation for tomcat 7, which is different from tomcat 6.  Digging into that code shows in tomcat 6 some careful "does this file exist?" checks before any xml stream parsing happens.  In tomcat 7 an InputSource is created against the file without checking for the file's existence (which is allowed).  After that an attempt is made to create a stream from that InputSource, which fails, but moving forward from that the method only checks for the presence/absence of the InputSource instance instead of whether or not the stream was created successfully.  Whether this is a bug in tomcat 7 or not I do not know. 
I'm attaching perhaps a simpler example to replicate the matter.    This attached sample works fine, because in webapps/META-INF I have a context.xml file with this content:  <context/>  To test the sample, from the base root, run: mvn clean install tomcat:run-war  Then check from a browser: http://localhost:8080/doubleit/services/doubleit?wsdl that you can see a WSDL document (i.e., working).  If I remove the context.xml file, I get the similar file-not-found exception as the original poster. 
Patch attached.  Note one slight potential drawback, is that now both tomcat7:run & tomcat7:run-war will check for the default META-INF/context.xml if contextFile is not explicitly configured (and use that file), however neither will report anything if that file is not present (as it doesn't need to be).  In the past only tomcat7:run-war checks for that file if contextFile is not set.  This patch fixes the exception because now if META-INF/context.xml is not present (and contextFile not explicitly configured for another file), no file is sent to Tomcat and hence the latter will use whatever context defaults it uses.  However, if you explicitly configure any file via contextFile that doesn't exist Tomcat will continue to throw a File Not Found exception (as it should), alerting the developer to the problem.  Unrelated issue fixed, in AbstractRunWarMojo the @Parameter property "maven.tomcat.warDirectory" was not defined, making users unable to provide a setting via the CLI -Dmaven.tomcat.warDirectory option (although it is defined in that class' parent AbstractRunMojo, I've found there's no inheritance of individual @Parameter values, just the @Parameter tag itself.) 
fixed http://svn.apache.org/r1432054 Thanks ! 
Integrated in TomcatMavenPlugin-mvn3.x #227 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/227/)     MTOMCAT-119 tomcat7:run-war fails because it expects META-INF\context.xml Submitted by Glen Mazza (Revision 1432054)       Result = SUCCESS olamy : http://svn.apache.org/viewvc/?view=rev&rev=1432054 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunWarMojo.java   
Test project that demonstrates bug. 
fixed r1297241. SNAPSHOT deployed. 
Integrated in TomcatMavenPlugin-mvn3.x #114 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/114/)     MTOMCAT-123 Can't add test scoped dependency filters to web.xml. (Revision 1297241)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1297241 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/RunMojo.java   
Do you have more logs ? (especially container start ) How do you add dependency on your jdbc driver when you use the plugin ? 
I add the jdbc driver and commons-dbcp to the plugin's dependencies.  I have a sample project, but I donot know how to attach it here. I have posted it in the mailing list.   The following is the output on the Console (I use WIndows 7):   Mar 13, 2012 7:04:23 PM org.apache.coyote.AbstractProtocol init INFO: Initializing ProtocolHandler ["http-bio-9090"] Mar 13, 2012 7:04:23 PM org.apache.catalina.core.StandardService startInternal INFO: Starting service Tomcat Mar 13, 2012 7:04:23 PM org.apache.catalina.core.StandardEngine startInternal INFO: Starting Servlet Engine: Apache Tomcat/7.0.25 Mar 13, 2012 7:04:24 PM org.apache.catalina.startup.ContextConfig getDefaultWebXmlFragment INFO: No global web.xml found Mar 13, 2012 7:04:24 PM org.apache.catalina.startup.ContextConfig webConfig SEVERE: Unable to determine URL for WEB-INF/classes javax.naming.NameNotFoundException: Resource /WEB-INF/classes not found         at org.apache.naming.resources.BaseDirContext.listBindings(BaseDirContext.java:733)         at org.apache.naming.resources.ProxyDirContext.listBindings(ProxyDirContext.java:546)         at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1197)         at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:825)         at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:300)         at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)         at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)         at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5161)         at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1568)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1558)         at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)         at java.util.concurrent.FutureTask.run(FutureTask.java:166)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)         at java.lang.Thread.run(Thread.java:722)  Mar 13, 2012 7:04:27 PM org.apache.catalina.core.StandardContext addApplicationListener INFO: The listener "com.sun.faces.config.ConfigureListener" is already configured for this context. The duplicate defini tion has been ignored. Mar 13, 2012 7:04:27 PM com.sun.faces.config.ConfigureListener contextInitialized INFO: Initializing Mojarra 2.1.4 (SNAPSHOT 20111107) for context '/webds' Mar 13, 2012 7:04:27 PM com.sun.faces.spi.InjectionProviderFactory createInstance INFO: JSF1048: PostConstruct/PreDestroy annotations present.  ManagedBeans methods marked with these annotations will ha ve said annotations processed. javax.naming.NameNotFoundException: Name jdbc is not bound in this Context         at org.apache.naming.NamingContext.lookup(NamingContext.java:820)         at org.apache.naming.NamingContext.lookup(NamingContext.java:168)         at org.apache.naming.factory.ResourceLinkFactory.getObjectInstance(ResourceLinkFactory.java:94)         at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:321)         at org.apache.naming.NamingContext.lookup(NamingContext.java:843)         at org.apache.naming.NamingContext.lookup(NamingContext.java:154)         at org.apache.naming.NamingContext.lookup(NamingContext.java:831)         at org.apache.naming.NamingContext.lookup(NamingContext.java:154)         at org.apache.naming.NamingContext.lookup(NamingContext.java:831)         at org.apache.naming.NamingContext.lookup(NamingContext.java:154)         at org.apache.naming.NamingContext.lookup(NamingContext.java:831)         at org.apache.naming.NamingContext.lookup(NamingContext.java:168)         at org.apache.naming.SelectorContext.lookup(SelectorContext.java:158)         at javax.naming.InitialContext.lookup(InitialContext.java:411)         at sample.DatabaseInitializer.processEvent(DatabaseInitializer.java:32)         at javax.faces.event.SystemEvent.processListener(SystemEvent.java:106)         at com.sun.faces.application.ApplicationImpl.processListeners(ApplicationImpl.java:2168)         at com.sun.faces.application.ApplicationImpl.invokeListenersFor(ApplicationImpl.java:2144)         at com.sun.faces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:302)         at com.sun.faces.config.ConfigManager.publishPostConfigEvent(ConfigManager.java:600)         at com.sun.faces.config.ConfigManager.initialize(ConfigManager.java:369)         at com.sun.faces.config.ConfigureListener.contextInitialized(ConfigureListener.java:225)         at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4779)         at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5273)         at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1568)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1558)         at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)         at java.util.concurrent.FutureTask.run(FutureTask.java:166)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)         at java.lang.Thread.run(Thread.java:722) Mar 13, 2012 7:04:27 PM org.apache.coyote.AbstractProtocol start INFO: Starting ProtocolHandler ["http-bio-9090"] 
I attached the sample for reproducing it. 
fixed. If you could try 2.1-SNAPSHOT. 
I can't, receiving 302 Found error: <quote> Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar (427 B at 0.4 KB/sec) [WARNING] Failed to retrieve plugin descriptor for org.apache.tomcat.maven:tomcat7-maven-plugin:2.1-SNAPSHOT: Failed to parse plugin descriptor for org.apache.tomcat.maven:tomcat7-maven-plugin:2.1-SNAPSHOT (/home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar): error in opening zip file [WARNING] The metadata /home/gilberto.andrade/.m2/repository/org/sonatype/plugins/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  [WARNING] The metadata /home/gilberto.andrade/.m2/repository/com/ning/maven/plugins/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  [WARNING] The metadata /home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  [WARNING] The POM for org.apache.tomcat.maven:tomcat7-maven-plugin:jar:2.1-SNAPSHOT is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 3.623s [INFO] Finished at: Wed Jan 30 14:43:10 BRT 2013 [INFO] Final Memory: 6M/245M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to parse plugin descriptor for org.apache.tomcat.maven:tomcat7-maven-plugin:2.1-SNAPSHOT (/home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar): error in opening zip file -> [Help 1] [ERROR]  [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginDescriptorParsingException  </quote> 
any network issues accessing to  http://repository.apache.org/content/repositories/snapshots ?  what is the content of those files:   /home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar  /home/gilberto.andrade/.m2/repository/org/sonatype/plugins/maven-metadata-apache.snapshots.xml   
Yes, I have this problem:  gilberto.andrade@A37710:~$ cat /home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"> <html><head> <title>302 Found</title> </head><body> <h1>Found</h1> <p>The document has moved <a href="https://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar">here</a>.</p> <hr> <address>Apache/2.2.20 (Ubuntu) Server at repository.apache.org Port 80</address> </body></html>   and   gilberto.andrade@A37710:~$ cat  /home/gilberto.andrade/.m2/repository/org/sonatype/plugins/maven-metadata-apache.snapshots.xml <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"> <html><head> <title>302 Found</title> </head><body> <h1>Found</h1> <p>The document has moved <a href="https://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml">here</a>.</p> <hr> <address>Apache/2.2.20 (Ubuntu) Server at repository.apache.org Port 80</address> </body></html> gilberto.andrade@A37710:~$    
weird which maven version are you using ? Last one follow redirect. To fix that you can probably use directly https://repository.apache.org/content/repositories/snapshots as snapshots repository. (note https rather than http) 
gilberto.andrade@A37710:~/dev/netbeans-config/reca$ mvn --version Apache Maven 3.0.3 (r1075438; 2011-02-28 14:31:09-0300) Maven home: /home/gilberto.andrade/bin/maven Java version: 1.7.0_07, vendor: Oracle Corporation Java home: /usr/java/jdk1.7.0_07/jre Default locale: en_US, platform encoding: UTF-8 OS name: "linux", version: "3.4.11-2.16-desktop", arch: "amd64", family: "unix"  Can you access this URL https://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml ? 
My settings.xml:  <?xml version="1.0" encoding="UTF-8"?> <settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd" xmlns="http://maven.apache.org/SETTINGS/1.0.0"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">   <localRepository>/home/gilberto.andrade/.m2/repository</localRepository>   <pluginGroups>     <pluginGroup>org.sonatype.plugins</pluginGroup>     <pluginGroup>com.ning.maven.plugins</pluginGroup>     <pluginGroup>org.apache.tomcat.maven</pluginGroup>   </pluginGroups>  Is there anything wrong here? 
 curl -I https://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml HTTP/1.1 404 The server has not found anything matching the request URI Date: Thu, 31 Jan 2013 16:46:41 GMT Server: Noelios-Restlet-Engine/1.1.6-SONATYPE-5348-V4 Vary: Accept-Charset,Accept-Encoding,Accept-Language,Accept Content-Type: text/html;charset=ISO-8859-1 Cache-Control: must-revalidate,no-cache,no-store Content-Length: 1533 Set-Cookie: rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 30-Jan-2013 16:46:41 GMT   so maven see 404 and doesn't care of that. Can you cleanup your local repo ?  rm -rf  /home/gilberto.andrade/.m2/repository/org/sonatype/plugins rm -rf  /home/gilberto.andrade/.m2/repository/org/apache/tomcat  then try again with -U 
gilberto.andrade@A37710:~/dev/netbeans-config/reca$ mvn clean tomcat7:run -U [INFO] Scanning for projects... Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 991a6c7b11f614906b14932cd6da49132ff2d5fa for http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 991a6c7b11f614906b14932cd6da49132ff2d5fa for http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml (408 B at 0.3 KB/sec) [WARNING] The metadata /home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 991a6c7b11f614906b14932cd6da49132ff2d5fa for http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 991a6c7b11f614906b14932cd6da49132ff2d5fa for http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml (408 B at 0.4 KB/sec) [WARNING] The metadata /home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  [WARNING] The POM for org.apache.tomcat.maven:tomcat7-maven-plugin:jar:2.1-SNAPSHOT is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details [WARNING] Failed to retrieve plugin descriptor for org.apache.tomcat.maven:tomcat7-maven-plugin:2.1-SNAPSHOT: Failed to parse plugin descriptor for org.apache.tomcat.maven:tomcat7-maven-plugin:2.1-SNAPSHOT (/home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar): error in opening zip file Downloading: http://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml Downloading: http://repository.apache.org/content/repositories/snapshots/com/ning/maven/plugins/maven-metadata.xml Downloading: http://10.121.0.20/nexus/content/groups/public/org/sonatype/plugins/maven-metadata.xml Downloading: http://10.121.0.20/nexus/content/groups/public/com/ning/maven/plugins/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 42b6a1762e310b461c052c6f0485e27ee726cafc for http://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 8e05b41e2e84155240f72e1a29f0dcab2d655b31 for http://repository.apache.org/content/repositories/snapshots/com/ning/maven/plugins/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 42b6a1762e310b461c052c6f0485e27ee726cafc for http://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml (371 B at 0.4 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 8e05b41e2e84155240f72e1a29f0dcab2d655b31 for http://repository.apache.org/content/repositories/snapshots/com/ning/maven/plugins/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/com/ning/maven/plugins/maven-metadata.xml (373 B at 0.3 KB/sec) Downloading: http://10.121.0.20/nexus/content/groups/public/org/apache/tomcat/maven/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is ed7e2a3c7cec5a1e645379ac9e14f80220fc73ab for http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is ed7e2a3c7cec5a1e645379ac9e14f80220fc73ab for http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/maven-metadata.xml (374 B at 0.4 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/maven/plugins/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is be141f6099c09fce32d9695eaf8e82c93f0a69d8 for http://repository.apache.org/content/repositories/snapshots/org/apache/maven/plugins/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is be141f6099c09fce32d9695eaf8e82c93f0a69d8 for http://repository.apache.org/content/repositories/snapshots/org/apache/maven/plugins/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/maven/plugins/maven-metadata.xml (375 B at 0.4 KB/sec) Downloading: http://10.121.0.20/nexus/content/groups/public/org/apache/maven/plugins/maven-metadata.xml Downloaded: http://10.121.0.20/nexus/content/groups/public/org/sonatype/plugins/maven-metadata.xml (5 KB at 0.5 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/codehaus/mojo/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 3ce2d306c8170ffe1d7741121a9295c3163824c5 for http://repository.apache.org/content/repositories/snapshots/org/codehaus/mojo/maven-metadata.xml [WARNING] Checksum validation failed, expected <!DOCTYPE but is 3ce2d306c8170ffe1d7741121a9295c3163824c5 for http://repository.apache.org/content/repositories/snapshots/org/codehaus/mojo/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/codehaus/mojo/maven-metadata.xml (368 B at 0.3 KB/sec) Downloading: http://10.121.0.20/nexus/content/groups/public/org/codehaus/mojo/maven-metadata.xml Downloaded: http://10.121.0.20/nexus/content/groups/public/org/apache/tomcat/maven/maven-metadata.xml (753 B at 0.0 KB/sec) Downloaded: http://10.121.0.20/nexus/content/groups/public/org/apache/maven/plugins/maven-metadata.xml (12 KB at 0.7 KB/sec) Downloaded: http://10.121.0.20/nexus/content/groups/public/com/ning/maven/plugins/maven-metadata.xml (616 B at 0.0 KB/sec) Downloaded: http://10.121.0.20/nexus/content/groups/public/org/codehaus/mojo/maven-metadata.xml (27 KB at 0.6 KB/sec) [WARNING] The metadata /home/gilberto.andrade/.m2/repository/org/sonatype/plugins/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  [WARNING] The metadata /home/gilberto.andrade/.m2/repository/com/ning/maven/plugins/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  [WARNING] The metadata /home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/maven-metadata-apache.snapshots.xml is invalid: end tag name </body> must match start tag name <hr> from line 7 (position: TEXT seen ...</address>\n</body>... @9:8)  [WARNING] The POM for org.apache.tomcat.maven:tomcat7-maven-plugin:jar:2.1-SNAPSHOT is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 1:00.526s [INFO] Finished at: Thu Jan 31 13:58:47 BRT 2013 [INFO] Final Memory: 6M/245M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to parse plugin descriptor for org.apache.tomcat.maven:tomcat7-maven-plugin:2.1-SNAPSHOT (/home/gilberto.andrade/.m2/repository/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-SNAPSHOT.jar): error in opening zip file -> [Help 1] [ERROR]  [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginDescriptorParsingException gilberto.andrade@A37710:~/dev/netbeans-config/reca$  
Please use https://repository.apache.org/content/repositories/snapshots (note it's httpS ) as maven 3.0.3 can have issues with following redirect and/or upgrade to maven 3.0.4 
I've update maven to 3.0.4. But ... It seems that the fix didn't no effect:  gilberto.andrade@A37710:~/dev/netbeans-config/reca$ mvn clean tomcat7:run [INFO] Scanning for projects... Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml (790 B at 0.3 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-20130131.210909-32.pom Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-20130131.210909-32.pom (12 KB at 10.6 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml (827 B at 0.8 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat-maven-plugin/2.1-SNAPSHOT/tomcat-maven-plugin-2.1-20130131.210904-33.pom Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat-maven-plugin/2.1-SNAPSHOT/tomcat-maven-plugin-2.1-20130131.210904-33.pom (31 KB at 28.8 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-20130131.210909-32.jar Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-maven-plugin/2.1-SNAPSHOT/tomcat7-maven-plugin-2.1-20130131.210909-32.jar (103 KB at 51.8 KB/sec) [INFO]                                                                          [INFO] ------------------------------------------------------------------------ [INFO] Building Recadastramento de Servidores Civis e Militares 1.0-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO]  [INFO] 芒鈧 maven-clean-plugin:2.4.1:clean (default-clean) @ reca 芒鈧 [INFO] Deleting /home/gilberto.andrade/dev/netbeans-config/reca/target [INFO]  [INFO] >>> tomcat7-maven-plugin:2.1-SNAPSHOT:run (default-cli) @ reca >>> [INFO]  [INFO] 芒鈧 maven-resources-plugin:2.5:resources (default-resources) @ reca 芒鈧 [debug] execute contextualize [INFO] Using 'UTF-8' encoding to copy filtered resources. [INFO] Copying 7 resources [INFO] Copying 13 resources [INFO] Copying 1 resource to /home/gilberto.andrade/dev/netbeans-config/reca/target/reca/WEB-INF/ [INFO] Copying 34 resources [INFO]  [INFO] 芒鈧 maven-compiler-plugin:2.3.2:compile (default-compile) @ reca 芒鈧 [INFO] Compiling 99 source files to /home/gilberto.andrade/dev/netbeans-config/reca/target/reca/WEB-INF/classes [WARNING] bootstrap class path not set in conjunction with -source 1.5 /home/gilberto.andrade/dev/netbeans-config/reca/src/main/java/br/gov/to/secad/seg/view/DeleteUser.java:[70,18] [deprecation] AttributeModifier(String,boolean,IModel<?>) in AttributeModifier has been deprecated [WARNING] /home/gilberto.andrade/dev/netbeans-config/reca/src/main/java/br/gov/to/secad/seg/view/DeleteUser.java:[90,17] [deprecation] AttributeModifier(String,boolean,IModel<?>) in AttributeModifier has been deprecated [WARNING] /home/gilberto.andrade/dev/netbeans-config/reca/src/main/java/br/gov/to/secad/seg/view/FindByServidor.java:[80,22] [deprecation] addComponent(Component...) in AjaxRequestTarget has been deprecated [WARNING] /home/gilberto.andrade/dev/netbeans-config/reca/src/main/java/br/gov/to/secad/seg/view/FindByServidor.java:[104,22] [deprecation] addComponent(Component...) in AjaxRequestTarget has been deprecated [WARNING] /home/gilberto.andrade/dev/netbeans-config/reca/src/main/java/br/gov/to/secad/seg/view/FindByServidor.java:[105,22] [deprecation] addComponent(Component...) in AjaxRequestTarget has been deprecated [WARNING] /home/gilberto.andrade/dev/netbeans-config/reca/src/main/java/br/gov/to/secad/seg/view/FindByServidor.java:[107,26] [deprecation] addComponent(Component...) in AjaxRequestTarget has been deprecated [WARNING] /home/gilberto.andrade/dev/netbeans-config/reca/src/main/java/br/gov/to/secad/seg/view/FindByServidor.java:[114,22] [deprecation] addComponent(Component...) in AjaxRequestTarget has been deprecated [INFO]  [INFO] 芒鈧 jasperreports-maven-plugin:1.0-beta-2:compile-reports (jrc) @ reca 芒鈧 Downloading: http://repository.apache.org/content/repositories/snapshots/commons-beanutils/commons-beanutils/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/commons-beanutils/commons-beanutils/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/commons-beanutils/commons-beanutils/maven-metadata.xml (330 B at 0.3 KB/sec) Downloading: http://snapshots.repository.codehaus.org/commons-beanutils/commons-beanutils/1.8.4-SNAPSHOT/maven-metadata.xml Downloading: http://repository.apache.org/content/repositories/snapshots/commons-beanutils/commons-beanutils/1.8.4-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/commons-beanutils/commons-beanutils/1.8.4-SNAPSHOT/maven-metadata.xml (2 KB at 1.0 KB/sec) Downloading: http://snapshots.repository.codehaus.org/commons-collections/commons-collections/maven-metadata.xml Downloading: http://repository.apache.org/content/repositories/snapshots/commons-collections/commons-collections/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/commons-collections/commons-collections/maven-metadata.xml (330 B at 0.3 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/commons-collections/commons-collections/4.0-SNAPSHOT/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/commons-collections/commons-collections/4.0-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/commons-collections/commons-collections/4.0-SNAPSHOT/maven-metadata.xml (3 KB at 2.4 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/commons-digester/commons-digester/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/commons-digester/commons-digester/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/commons-logging/commons-logging/maven-metadata.xml Downloading: http://repository.apache.org/content/repositories/snapshots/commons-logging/commons-logging/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/commons-logging/commons-logging/maven-metadata.xml (364 B at 0.2 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/commons-logging/commons-logging/1.1.2-SNAPSHOT/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/commons-logging/commons-logging/1.1.2-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/commons-logging/commons-logging/1.1.2-SNAPSHOT/maven-metadata.xml (3 KB at 2.0 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/itext/itext/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/itext/itext/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/jfree/jcommon/maven-metadata.xml Downloading: http://repository.apache.org/content/repositories/snapshots/jfree/jcommon/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/jfree/jfreechart/maven-metadata.xml Downloading: http://repository.apache.org/content/repositories/snapshots/jfree/jfreechart/maven-metadata.xml Downloading: http://repository.apache.org/content/repositories/snapshots/eclipse/jdtcore/maven-metadata.xml Downloading: http://snapshots.repository.codehaus.org/eclipse/jdtcore/maven-metadata.xml [INFO] Nothing to compile - all Jasper reports are up to date [INFO]  [INFO] <<< tomcat7-maven-plugin:2.1-SNAPSHOT:run (default-cli) @ reca <<< [INFO]  [INFO] 芒鈧 tomcat7-maven-plugin:2.1-SNAPSHOT:run (default-cli) @ reca 芒鈧 Downloading: http://10.121.0.20/nexus/content/groups/public/org/eclipse/jdt/core/compiler/ecj/4.2.1/ecj-4.2.1.pom Downloaded: http://10.121.0.20/nexus/content/groups/public/org/eclipse/jdt/core/compiler/ecj/4.2.1/ecj-4.2.1.pom (2 KB at 0.1 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/common-tomcat-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/common-tomcat-maven-plugin/2.1-SNAPSHOT/maven-metadata.xml (796 B at 0.5 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/common-tomcat-maven-plugin/2.1-SNAPSHOT/common-tomcat-maven-plugin-2.1-20130131.210902-33.pom Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/common-tomcat-maven-plugin/2.1-SNAPSHOT/common-tomcat-maven-plugin-2.1-20130131.210902-33.pom (5 KB at 4.2 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-war-runner/2.1-SNAPSHOT/maven-metadata.xml Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-war-runner/2.1-SNAPSHOT/maven-metadata.xml (788 B at 0.7 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-war-runner/2.1-SNAPSHOT/tomcat7-war-runner-2.1-20130131.210910-33.pom Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-war-runner/2.1-SNAPSHOT/tomcat7-war-runner-2.1-20130131.210910-33.pom (4 KB at 3.5 KB/sec) Downloading: http://10.121.0.20/nexus/content/groups/public/org/eclipse/jdt/core/compiler/ecj/4.2.1/ecj-4.2.1.jar Downloaded: http://10.121.0.20/nexus/content/groups/public/org/eclipse/jdt/core/compiler/ecj/4.2.1/ecj-4.2.1.jar (1755 KB at 77.2 KB/sec) Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/common-tomcat-maven-plugin/2.1-SNAPSHOT/common-tomcat-maven-plugin-2.1-20130131.210902-33.jar Downloading: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-war-runner/2.1-SNAPSHOT/tomcat7-war-runner-2.1-20130131.210910-33.jar Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/tomcat7-war-runner/2.1-SNAPSHOT/tomcat7-war-runner-2.1-20130131.210910-33.jar (24 KB at 12.1 KB/sec) Downloaded: http://repository.apache.org/content/repositories/snapshots/org/apache/tomcat/maven/common-tomcat-maven-plugin/2.1-SNAPSHOT/common-tomcat-maven-plugin-2.1-20130131.210902-33.jar (38 KB at 17.0 KB/sec) [INFO] Running war on http://localhost:8080/reca [INFO] Creating Tomcat server configuration at /home/gilberto.andrade/dev/netbeans-config/reca/target/tomcat [INFO] create webapp with contextPath: /reca Feb 01, 2013 11:43:15 AM org.apache.coyote.AbstractProtocol init INFO: Initializing ProtocolHandler ["http-bio-8080"] Feb 01, 2013 11:43:15 AM org.apache.catalina.core.StandardService startInternal INFO: Starting service Tomcat Feb 01, 2013 11:43:15 AM org.apache.catalina.core.StandardEngine startInternal INFO: Starting Servlet Engine: Apache Tomcat/7.0.35 Feb 01, 2013 11:43:18 AM org.apache.catalina.core.ApplicationContext log INFO: Initializing Spring root WebApplicationContext 11:43:20,423  INFO WebXmlFile:243 - web.xml: url mapping found for filter with name RECA: [/*] Feb 01, 2013 11:43:20 AM org.apache.catalina.core.StandardContext filterStart SEVERE: Exception starting filter RECA java.lang.IllegalArgumentException: Invalid configuration type: '$ {wicket.MODE} '.  Must be "development" or "deployment".         at org.apache.wicket.protocol.http.WebApplication.getConfigurationType(WebApplication.java:667)         at org.apache.wicket.Application.configure(Application.java:297)         at org.apache.wicket.protocol.http.WebApplication.internalInit(WebApplication.java:610)         at org.apache.wicket.Application.initApplication(Application.java:804)         at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:346)         at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:286)         at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:281)         at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:262)         at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:107)         at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4656)         at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5312)         at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)         at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)         at java.util.concurrent.FutureTask.run(FutureTask.java:166)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)         at java.lang.Thread.run(Thread.java:722)  Feb 01, 2013 11:43:20 AM org.apache.catalina.core.StandardContext startInternal SEVERE: Error filterStart Feb 01, 2013 11:43:20 AM org.apache.catalina.core.StandardContext startInternal SEVERE: Context [/reca] startup failed due to previous errors Feb 01, 2013 11:43:20 AM org.apache.catalina.core.ApplicationContext log INFO: Closing Spring root WebApplicationContext Feb 01, 2013 11:43:20 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc SEVERE: The web application [/reca] registered the JDBC driver [org.postgresql.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. Feb 01, 2013 11:43:20 AM org.apache.coyote.AbstractProtocol start INFO: Starting ProtocolHandler ["http-bio-8080"] 
please provide a sample project to reproduce. 
Sample maven project 
Thanks. But I understand more your trouble now. tomcatWebXml field is to override the usual global web.xml used by tomcat (usually located in $CATALINA_HOME/conf/web.xml) See in  target/tomcat/conf/web.xml  But what you can do to have interpolations of src/main/webapp/WEB-INF/web.xml is something like that:              <plugin>                 <groupId>org.apache.tomcat.maven</groupId>                 <artifactId>tomcat7-maven-plugin</artifactId>                 <version>2.1-SNAPSHOT</version>                 <configuration>                    ...                   <systemProperties>                     <wicket.MODE>${wicket.MODE}</wicket.MODE>                   </systemProperties>                   ...                 </configuration>              </plugin>   
Hello, we are in the same situation, we need to use a web.xml not placed in WEB-INF/classes, in order to use the maven-filtered one, that is available in "target" directory not in "src/main/webapp" directory. I just modified tomcat7-maven-plugin to add a new parameter, just adding those lines to AbstractRunMojo.java:  On variable definitions:      @Parameter( property = "maven.tomcat.webXmlPath" )     private String webXmlPath;  On startContainer() method, after those lines:                 embeddedTomcat.setDefaultRealm( memoryRealm );                 Context ctx = createContext( embeddedTomcat ); Add those ones:                 ServletContext servletContext = ctx.getServletContext();                 if (servletContext != null && webXmlPath != null)  {                     servletContext.setAttribute("org.apache.catalina.deploy.alt_dd", webXmlPath);                 }  With those modifications, you can use the new parameter "webXmlPath" con configuration of your tomcat7-maven-plugin:       <plugin>         <groupId>org.apache.tomcat.maven</groupId>         <artifactId>tomcat7-maven-plugin</artifactId>         <version>2.2</version>         <configuration>             ....             <webXmlPath>$ {project.build.directory} /Web127/WEB-INF/web.xml</webXmlPath>           </configuration>         </plugin>  Regards. 
A workaround is to run maven with -Dmaven.tomcat.path="" and don't set <path> to something else in the plugin's configuration (<path></path> is ok) 
I try to map servlet to "/" in web.xml, that works.   For information, in Spring documentation, you have this quote :    Mapping to '/' under Tomcat Apache Tomcat maps its internal DefaultServlet to "/", and on Tomcat versions <= 7.0.14, this servlet mapping cannot be overridden programmatically. 7.0.15 fixes this issue. Overriding the "/" servlet mapping has also been tested successfully under GlassFish 3.1.  The related issue in tomcat : https://issues.apache.org/bugzilla/show_bug.cgi?id=51278   
Here is new information to solve this bug:  The code to add mapping : ServletRegistration.Dynamic myServlet = servletContext.addServlet(//); Set<String> conflicts = myServlet.addMapping("/");  In Tomcat 7 standalone, the conflits set is empty. In Maven Tomcat 7 plugin, the conflicts set contains the String "/".   I investigate, and one difference I found is that the "Wrapper" for the jsp servlet and the default servlet is "overridable" in tomcat 7 but not in maven plugin context.  
The difference comes from the declaration of default servlets.  In the plugin, the declaration is made into "Tomcat" class, in the method initWebappDefaults.   Wrapper servlet = addServlet(                 ctx, "default", "org.apache.catalina.servlets.DefaultServlet");         servlet.setLoadOnStartup(1);          // JSP servlet (by class name - to avoid loading all deps)         servlet = addServlet(                 ctx, "jsp", "org.apache.jasper.servlet.JspServlet");         servlet.addInitParameter("fork", "false");         servlet.setLoadOnStartup(3)  And in this way, the wrapper is not set as overridable.   
fixed. 
Integrated in TomcatMavenPlugin-mvn3.x #123 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/123/)     MTOMCAT-133 Servlet mapping to "/" does not work apply same fix for the exec war feature. (Revision 1310131) MTOMCAT-133 Servlet mapping to "/" does not work use the defaut web.xml (Revision 1310113)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1310131 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractExecWarMojo.java  /tomcat/maven-plugin/trunk/tomcat7-war-runner/src/main/java/org/apache/tomcat/maven/runner/Tomcat7Runner.java    olamy : http://svn.apache.org/viewvc/?view=rev&rev=1310113 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
Proposed fix 
patch applied. Thanks! 
Integrated in TomcatMavenPlugin-mvn3.x #120 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/120/)     MTOMCAT-134 Empty additionalClasspathDir causes NPE in RunMojo.java Submitted by John Meyer. (Revision 1309560)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1309560 Files :    /tomcat/maven-plugin/trunk/tomcat6-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat6/RunMojo.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/RunMojo.java   
Integrated in TomcatMavenPlugin-mvn3.x #122 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/122/)     MTOMCAT-135 tomcat7:run does not load HandlesTypes in application classes (Revision 1310083)       Result = SUCCESS olamy : http://svn.apache.org/viewvc/?view=rev&rev=1310083 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
can you paste running mvn -e ? 
[ERROR] Failed to execute goal org.apache.tomcat.maven:tomcat7-maven-plugin:2.0-beta-1:run (default-cli) on project mantis-test-web-app: No such archiver: 'jar'. -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.tomcat.maven:tomcat7-maven-plugin:2.0-beta-1:run (default-cli) on project mantis-test-web-app: No such archiver: 'jar'.         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:217)         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)         at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)         at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)         at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)         at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)         at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)         at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)         at java.lang.reflect.Method.invoke(Method.java:597)         at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)         at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)         at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)         at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352) Caused by: org.apache.maven.plugin.MojoExecutionException: No such archiver: 'jar'.         at org.apache.tomcat.maven.plugin.tomcat7.run.RunMojo.createWebappLoader(RunMojo.java:277)         at org.apache.tomcat.maven.plugin.tomcat7.run.AbstractRunMojo.createContext(AbstractRunMojo.java:415)         at org.apache.tomcat.maven.plugin.tomcat7.run.AbstractRunMojo.startContainer(AbstractRunMojo.java:719)         at org.apache.tomcat.maven.plugin.tomcat7.run.AbstractRunMojo.execute(AbstractRunMojo.java:353)         at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)         ... 19 more Caused by: org.apache.tomcat.maven.common.run.TomcatRunException: No such archiver: 'jar'.         at org.apache.tomcat.maven.common.run.DefaultClassLoaderEntriesCalculator.calculateClassPathEntries(DefaultClassLoaderEntriesCalculator.java:184)         at org.apache.tomcat.maven.plugin.tomcat7.run.RunMojo.createWebappLoader(RunMojo.java:232)         ... 24 more Caused by: org.codehaus.plexus.archiver.manager.NoSuchArchiverException: No such archiver: 'jar'.         at org.codehaus.plexus.archiver.manager.DefaultArchiverManager.getUnArchiver(DefaultArchiverManager.java:77)         at org.apache.tomcat.maven.common.run.DefaultClassLoaderEntriesCalculator.calculateClassPathEntries(DefaultClassLoaderEntriesCalculator.java:146)         ... 25 more 
more details I need: do you have a dependency of type war in your project ? 
should be fixed now. SNAPSHOT deployed. 
Integrated in TomcatMavenPlugin-mvn3.x #127 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/127/)     MTOMCAT-136 Tomcat7-maven-plugin 2.0-beta1 and useSeparateTomcatClassloader fails with run goal fix issue for tomcat6 plugin too. (Revision 1325195) MTOMCAT-136 Tomcat7-maven-plugin 2.0-beta1 and useSeparateTomcatClassloader fails with run goal (Revision 1325194)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1325195 Files :    /tomcat/maven-plugin/trunk/tomcat6-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat6/AbstractRunMojo.java    olamy : http://svn.apache.org/viewvc/?view=rev&rev=1325194 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
artifactId has changed for tomcat7 see documentation added here http://svn.apache.org/viewvc?view=revision&revision=1324716 
Integrated in TomcatMavenPlugin-mvn3.x #126 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/126/)     MTOMCAT-138 Cannot define the embedded Tomcat version document how to adjust embedded tomcat version used with tomcat7 plugin. (Revision 1324715)       Result = SUCCESS olamy : http://svn.apache.org/viewvc/?view=rev&rev=1324715 Files :    /tomcat/maven-plugin/trunk/tomcat6-maven-plugin/src/site/site.xml  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/site/site.xml   
SNAPSHOT doc deployed here http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/tomcat7-maven-plugin/adjust-embedded-tomcat-version.html 
AbstractRunMojo.java (trunk):  /**   The static context      *  @parameter expression="$ {maven.tomcat.staticContextPath}" default-value="/"      * @since 2.0      */     private String staticContextPath;      /**      * The static context docroot base fully qualified path      * if <code>null</code> static context won't be added      *      * @parameter expression="${maven.tomcat.staticContextPath} "  @since 2.0      */     private String staticContextDocbase;    Looking at the above, the code shows parameter expression="$ {maven.tomcat.staticContextPath}  for both fields staticContextDocbase and staticContextPath.  
Integrated in TomcatMavenPlugin-mvn3.x #126 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/126/)     MTOMCAT-139 All static resources gives error 404 (Revision 1324717)       Result = SUCCESS olamy : http://svn.apache.org/viewvc/?view=rev&rev=1324717 Files :    /tomcat/maven-plugin/trunk/tomcat6-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat6/AbstractRunMojo.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
fixed r1325731. 
Integrated in TomcatMavenPlugin-mvn3.x #130 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/130/)     MTOMCAT-141 Context root "/" not working for Tomcat 7 Run (Revision 1325731)       Result = SUCCESS olamy : http://svn.apache.org/viewvc/?view=rev&rev=1325731 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
Great to see this is scheduled for 2.0.  Note also that the contextFile does not have a $ {maven.tomcat.*}  expression that can be used to specify it on the command line. that would be useful if you are going to hack around in there a bit. 
you mean applying filtering for the file with Maven sys props ? 
I guess that's what I mean, but I wouldn't have used those words.  For instance the path config can be provided on the command line with -Dtomcat.maven.path=/foo, but there is no corresponing setting for the contextFile (as can be seen here http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/tomcat7-maven-plugin/run-mojo.html or in the plugin.xml). 
oh ok I see. I was talking about something different . in your context file : <Context path="$ {foo.mypath} "/> So  you could use -Dfoo.mypath= 
If I could do that it would be useful too.  But not as easy for you as just exposing an expression. 
Not a problem I already did that here http://maven.apache.org/shared/maven-filtering/ in a shared maven library  
all done. Have fun  
Integrated in TomcatMavenPlugin-mvn3.x #131 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/131/)     MTOMCAT-142 contextFile path="..." ignored when using tomcat7:run (Revision 1325842)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1325842 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
Olivier, you marked this as fixed, but it doesn't seem to work for me.  I grabbed a snapshot (20120413.171048-58) - maybe your change is not deployed yet?  Specifiying -Dmaven.tomcat.contextFile on the command line I can see that the value is picked up when I look at the console output, but it still completely ignores my context.xml.  Can you send me a context.xml that works to change the context root? 
weird. Are you using an absolute or relative path in -Dmaven.tomcat.contextFile ? I have something very simple based on http://svn.apache.org/repos/asf/archiva/trunk/archiva-modules/archiva-web/archiva-webapp/src/test/tomcat/tomcat-context-archiva.xml  
That app has the same artifact I'd as the path in your context.xml, I think. What happens if you change the path in the context.xml? JIRA SUCKS ON AN IPHONE. 
If I use <Context path="/foo"> the webapp is available on /foo  
oops my bad. Should be better now with r1326764. (SNAPSHOT deployed) 
Integrated in TomcatMavenPlugin-mvn3.x #136 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/136/)     MTOMCAT-142 fix context file using / path (Revision 1326764)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1326764 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
sure only "/" works. if path="" that's considered as no path defined. 
Here is my configuration in pom.xml :  <plugin>       <groupId>org.apache.tomcat.maven</groupId>       <artifactId>tomcat7-maven-plugin</artifactId>       <version>2.0-SNAPSHOT</version>             <configuration>        <domain>TomcatRunner</domain>        <port>$ {app.port} </port>        <url>/manager</url>        <path>$ {app.contexturl} </path>        <contextFile>$ {appdir}/context.xml</contextFile>        <tomcatUsers>${appdir} /tomcat-users.xml</tomcatUsers>        <useTestClasspath>true</useTestClasspath>        <contextReloadable>true</contextReloadable>        <fork>$ {tomcat.fork} </fork><!-- fork=true will stop tomcat after run -->       </configuration>       <executions>        <execution>         <id>tomcat-run</id>         <phase>pre-integration-test</phase>         <goals>          <goal>run-war-only</goal>         </goals>        </execution>        <execution>         <id>tomcat-shutdown</id>         <phase>post-integration-test</phase>         <goals>          <goal>shutdown</goal>         </goals>        </execution>       </executions>       <dependencies>        <dependency><!-- Servler 2.x not compatible with Tomcat 7 -->         <groupId>javax.servlet</groupId>         <artifactId>javax.servlet-api</artifactId>         <version>3.0.1</version>        </dependency>        <dependency>         <groupId>oracle.jdbc</groupId>         <artifactId>ojdbc6</artifactId>         <version>$ {oracle.version} </version>        </dependency>       </dependencies>      </plugin>  Since the middle of the last week, this doesn't work anymore. The definition of my users in the specified tomcat-users.xml is not used. 
Integrated in TomcatMavenPlugin-mvn3.x #140 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/140/)     MTOMCAT-143 contextFile and tomcatUsers defined in pom.xml are not used with target tomcat7:run configuring realm must be done before adding context. (Revision 1329339)       Result = SUCCESS olamy : http://svn.apache.org/viewvc/?view=rev&rev=1329339 Files :    /tomcat/maven-plugin/trunk/tomcat6-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat6/AbstractRunMojo.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
I need more informations. contextPath of the webapp and getServletContext().getResourcePaths(path) (value of path ??) 
please provide a sample project to reproduce. 
Integrated in TomcatMavenPlugin-mvn3.x #145 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/145/)     MTOMCAT-144 resourcePaths returns null (Revision 1332183)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1332183 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
fixed and SNAPSHOT deployed. 
This patch will serve files out of WAR overlays if they are not found in docBase.  It only applies to the tomcat6 component. If I receive positive feedback, I will work it into the tomcat7 component as well 
So applying and quickly testing the patch, it cause issue (no backward compatible change) on a project I work (sorry I didn't get time to investigate more). The project is located @ http://svn.apache.org/repos/asf/archiva/trunk/. To reproduce just use :  svn co http://svn.apache.org/repos/asf/archiva/trunk/ archiva-trunk cd archiva-trunk mvn tomcat6:run -Pdev -Ptomcat -pl :archiva-webapp -am   
The patch also apparently doesn't work when loading the overlays from the reactor.  Olivier, given this issue, how are you developping Archiva with so many WAR overlays? Are you installing the overlays and restarting tomcat each time? I see you have some configuration of the maven-dependency-plugin but it's with skip=true. 
I'd like to use this with tomcat7, please. 
dup of MTOMCAT-116 
that must be fixed with 2.0-SNAPSHOT. Can you try it ? see http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/snapshot-test.html 
please provide more infos. 
Sorry about that. MTOMCAT-170 has the same problem, too. I'll generate a new patch shortly and then attach it to both tickets. 
Integrated in TomcatMavenPlugin-mvn3.x #185 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/185/)     MTOMCAT-169 Unable to Deploy WAR Defined via "webapps" Declaration Submitted by Josh Harness. Patch modified to preserve backward comp. (Revision 1367432)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1367432 Files :    /tomcat/maven-plugin/trunk/common-tomcat-maven-plugin/src/main/java/org/apache/tomcat/maven/common/config/AbstractWebapp.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
Simply calls "createWebappLoader" in order to inherit the configuration of the main web application configuration. It would be ideal to be able to configure this on a case by case basis (per webapp) but this could be a reasonable start.  
Patch file for issue - generated from local development repo.  
patch applied. Thanks ! 
Integrated in TomcatMavenPlugin-mvn3.x #185 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/185/)     MTOMCAT-170 Unable to Specify Additional Classpath for WAR Defined via "webapps" Declaration Submitted by Josh Harness. (Revision 1367433)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1367433 Files :    /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/AbstractRunMojo.java   
That's not a problem as classpath elements (the output directory of your dependency from reactors is added to the class path). Which maven version are you using ? (I have to say that work only with maven 3). 
I'm using:  Apache Maven 3.0.4 (r1232337; 2012-01-17 09:44:56+0100) 
So should work fine. Do you have any sample project to reproduce your isssue ? 
use: mvn -pl :dep-issue-webapp -am tomcat7:run  
I miss you here !  Don't clean your projects and you won't rebuild/recompile everything. use only mvn -pl :dep-issue-webapp tomcat7:run (without -am) if you don't want to rebuild/recompile everything. 
> Don't clean your projects oops, of course you're right about that.  > use only mvn -pl :dep-issue-webapp tomcat7:run (without -am) if you don't want to rebuild/recompile everything. if I don't use "-am", Tomcat will not have all necessary libraries in the classpath  if I use "-am" , Tomcat will have all necessary libraries in the classpath, but this won't work if any of my dependencies are also WAR artefacts which also have a Tomcat configuration since Maven will run the Tomcat plugin for the first module with plugin configuration in the dependency chain. Also, dependencies will only be added to the classpath if they are compile time dependencies, whereas a WAR artefact only needs runtime dependencies if it doesn't contain code that needs compiling.  For me the only working workaround at the moment is to run "mvn tomcat7:run" directly in the directory of the webapp module. 
Hello,  I have the same issue with tomcat7-maven-plugin:2.0. But it's during an integration test with junit. I have the structure below:  / 芒鈧 project-domain 芒鈧 project-webapp  The module project-domain isn't added to the classpath and the startup of the tomcat fails. In the maven debug log I see too 'skip adding artifact project-domain as it's in reactors'.  In DefaultClassLoaderEntriesCalculator#calculateClassPathEntries at line 116, the method isInProjectReferences rejects the project-domain as it's in projectReferences of project-webapp.  So is it possible to add a cheap workaround like a configuration parameter 'forceIncludeProjectReferences' in order to add those project references to module classpath?  Thanks. 
fixed http://svn.apache.org/r1408507 
The text is a free unpaginated sample from the start of the file. However, stylesheet used to generate plain text report contained errant whitespace. This has now been removed.
The report now looks like this:   =======================================================================  ==src/conf/MANIFEST.MF  ======================================================================= Manifest-Version: 1.0 Package: @package@ Extension-Name: @name@  i.e. the header is indented, but the file is not.  This was using version 0.7
Fixed in r1203953 , feel free to test/check.
Neither the first line nor the header are indented with svn revision 1204460
Agreed. Want to help with the code?
The scripts mentioned above needed to first detect that it is an AL-type header, then detect other patterns to distinguish between the variants.
Here are some modified snippets from those Perl scripts:  -------- AL-20 = Apache License 2.0 with original Copyright line.  AL-20a = Apache License 2.0 with original Copyright line and "or its licensors".  AL-20b = Apache License 2.0 with no Copyright line, i.e. the current style.  AL-20x = same as AL-20b but missing the word "contributor". (That was due to a mistake that i made, and only discovered a few days later. Hopefully no-one but Forrest/Cocoon used the script during that time.)  F-AL-20 = If not one of the above, then assume it is someone else using AL-20.  AL-12 = Apache Software License Version 1.2 F-AL-12 = someone else using AL-12.  AL-11 = Apache Software License Version 1.1 F-AL-11 = someone else using AL-11.  AL-10 = Copyright The Apache Group  -------- LICENSE_CASE: {   if ($headContent =~ /Licensed .* Apache Software Foundation (ASF) under/) {     if ($headContent !~ /contributor license agreements\.[ ]+See the NOTICE/)  {       # detect an error with a previous version of this script       $licenseType = "AL-20x";     }     else  {       $licenseType = "AL-20b";     }     last LICENSE_CASE;   }   if ($headContent =~ /Licensed under the Apache License.*Version 2.0/) {     if ($headContent =~ /Apache Software Foundation or its licensors/)  {       $licenseType = "AL-20a";       $warnAL20aOldLicense = 1;     }     else {       if ($headContent =~ /Copyright.*Apache Software Foundation/)  {         $licenseType = "AL-20";         $warnAL20OldLicense = 1;       }       else  {         $licenseType = "F-AL-20";       }     }     last LICENSE_CASE;   }   if ($headContent =~ /The Apache Software License.*Version 1.2/) {     if ($headContent =~ /Copyright.*Apache Software Foundation/)  {       $licenseType = "AL-12";     }     else  {       $licenseType = "F-AL-12";     }     last LICENSE_CASE;   }   if ($headContent =~ /The Apache Software License.*Version 1.1/) {     if ($headContent =~ /Copyright.*Apache Software Foundation/)  {       $licenseType = "AL-11";     }     else  {       $licenseType = "F-AL-11";     }     last LICENSE_CASE;   }   if ($headContent =~ /Copyright.*The Apache Group/)  {     $licenseType = "AL-10";     last LICENSE_CASE;   } }  -------- Improvements:    Needs to handle double-justified text, hence multiple whitespace. Ignore whitespace.      Pattern matching needs to be multi-line.      Perhaps need to handle "[Tt]he Apache".
Report correct num of unapproved licences
Oops, I didn't notice this issue when filing RAT-35. Resolving this as a reverse duplicate as the patch in RAT-35 got already applied.
Correct SCM info
Committed. Many thanks.
I'm not seeing this error on Windows + Cygwin   I'm on Maven 2.0.7 rather than 2.0.8 in the original  report
I'm guessing the source of this is <subscribe>rat-dev-unsubscribe@incubator.apache.org</subscribe> from the pom.xml.
Fixed in the pom.xml, will be fixed on the site automatically when we redeploy it.
I stumbled over this when I refactored the AbstractLicenseAppender code.  The same is true for XML files without an XML decl which would need a slightly different resolution (the XML decl has to be added so we can add the comment).  I'd prefer the second option myself in particular since we don't have any documentation anyway.
fixed with svn revision 1147539
Applied, thank you!
Proposed patch (against rat/main/trunk, revision 734690).
Applied, thank you!
Some xml files have missing "XML Declaration". See attached patch-xml-decl.txt
I use Ant's fixcrlf task for that in a build file like the attached one.  Thanks David
Ant build file to fix inconsistent line ends
Patch attached.
Applied, thank you!
I can't reproduce it myself anymore either, it is quite possible there is/was a bug in the svn trunk version of Ant I've been using at that point in time.
Changed in SVN and deployed to the Incubator web site. Thanks!
Attaching diff of the 4 files with missing headers.
Added license headers to 3 files, preferring to exclude the BUILD.txt file.  The tests should now just report on the 5 purposely failed files.
attached a patch that adds the right URI to the -taskdef ant target -tnx
fixed in svn revision 815659  Thanks
Here's a patch that corrects all the links and makes an attempt at cohesive navigation between all the pieces.
Why not using preset menus [1] instead of enumerating modules and parents?  [1] http://maven.apache.org/plugins/maven-site-plugin/examples/sitedescriptor.html (Including Generated Content)
Add missing section closing
Committed r907529 , thanks!
Patch still required and up to date.   Missing page would be at [0]  Or goto [1] and click on 'Goals'    [0] http://incubator.apache.org/rat/apache-rat-plugin/plugin-info.html [1] http://incubator.apache.org/rat/apache-rat-plugin/index.html
Committed r907528, thanks!
I think it depends on the java VM as well, I don't seem to get the MalformedInputException on my Ubuntu box using OpenJDK6.  svn revision 1147110 contains an attempt at a testcase but it cannot assert anything since the precondition (there is a MIE) is never true for me.  I think I know how to fix the problem using NIO but so far am reluctant as I don't have a good way to regression test it.
svn revision 1147525 now contains the NIO based code which I think should mark the files as binary for you.  It would be good if you could verify for me whether RAT's trunk behaves as desired now.
Let's be optimistic and assume it is fixed, please reopen if the problem pops up again once 0.8 has been released.
It does not seem right to me to mark XML files with invalid contents as binary. Binary implies that the file does not need a license, but that is not the case.  Such files should still have a valid license (unless excluded), so RAT should report the file as unreadable or similar.
Also I'm not sure that the test files do have any errors in them
See http://mail-archives.apache.org/mod_mbox/incubator-rat-dev/201102.mbox/%3C87fwrmac2v.fsf@v35516.1blu.de%3E
Can you provide a justification for why it won't be fixed? I think this SHOULD be fixed.
Thanks Stefan. Failed to spot the link previously.
should be fixed with svn revision 1080572
Oops, yes, an oversight, sorry.  Should finally be fixed with svn revision 1081440
refactored the test class and made sure tests are trying as hard as possible to remove all temporary files.
fixed with svn revision 1156143
should be fixed with svn revision 1156170
The current behavior of the Maven plugin is to log the files that are excluded in the build log.  It can look like this example, where I have excluded the BUILD.txt file:  [INFO] ------------------------------------------------------------------------ [INFO] Building Apache Rat [INFO]    task-segment: [org.apache.rat:apache-rat-plugin:0.9-SNAPSHOT:check] [INFO] ------------------------------------------------------------------------ [INFO] snapshot org.apache.rat:apache-rat-core:0.9-SNAPSHOT: checking for updates from apache.snapshots [INFO] [apache-rat:check  {execution: default-cli} ] [INFO] Exclude: BUILD.txt  Did you want for this to be included in the report?
Yes, the details need to appear in the report so that it contains all the necessary information. Ideally this should show all files that are actually excluded, not the file names in the <exclude> tags - i.e. don't show missing files, but do show files that match wildcard entries.  The console log is transitory, so should not be the only place where such information is reported.
1
It would be helpful to show the active include and exclude configuration on the report as well; this should be after any defaults have been applied. [The defaults may change between releases, so it is helpful to have the active settings documented.]  For excludes of directory trees, it probably does not make sense to list individual files (there will generally be too many). It's really only for the more specific excludes where the file names might be useful - the exclude may be too general.
should be fixed with svn revision 1196463
Yes, I saw that when I published the release.  Actually I'd prefer a download page like the Commons projects have and it is on my TODO list (I need to do the same for log4net) - I just need to investigate how it is done in Commons.  Do you have any pointers beyond "read the Commons parent POM"?
Download page is now more user friendly and contains direct links to the mirrors and unmirrored links for KEYS, signatures and hashes.
Thanks. all looks OK now.
Patch with the corrected typo
Applied, thanks for the patch
Attaching apache-rat-project-RAT-107.patch which fixes the issue. Additional integration test is included.
Github user aledsage commented on a diff in the pull request:      https://github.com/apache/incubator-brooklyn/pull/49#discussion_r14705875      芒鈧 Diff: pom.xml 芒鈧     @@ -678,6 +662,64 @@                          </execution>                      </executions>                  </plugin>     +            <!-- Needed for command-line access, e.g mvn apache-rat:rat and mvn apache-rat:check -->     +            <plugin>     +              <groupId>org.apache.rat</groupId>     +              <artifactId>apache-rat-plugin</artifactId>     +              <version>0.10</version>     +              <executions>     +                <execution>     +                  <phase>verify</phase>     +                  <goals>     +                    <goal>check</goal>     +                  </goals>     +                </execution>      +              </executions>     +              <configuration>     +                <!--     +                     If you wish to override this list in the component (child) pom, ensure you use     +                         <excludes combine.children="merge">     +                     so that the child pom entries replace the parent entries     +                 -->     +                <excludes combine.children="append">     +                  <!-- git and IDE project files -->     +                  <!-- see https://issues.apache.org/jira/browse/RAT-107 -->     +                  <exclude>*/.git/*</exclude>     +                  <exclude>**/.gitignore</exclude>     +                  <exclude>*/.idea/*</exclude>     +                  <exclude>*/.iml</exclude>     +                  <exclude>*/.classpath/*</exclude>     +                  <exclude>**/.project</exclude>     +                  <exclude>*/.settings/*</exclude>     +                  <exclude>*/.log</exclude>     +                  <exclude>*/brooklyn.log.*</exclude>     +                  <!-- files not requiring licence -->     +                  <exclude>ignored/**</exclude>     +                  <exclude>LICENSE.md</exclude>     +                  <exclude>**/MANIFEST.MF</exclude>     +                  <exclude>*/test-output/*</exclude>     +                  <exclude>*/.pem.pub</exclude>     +                  <exclude>*/.svg</exclude>     +                  <exclude>*/.crt</exclude>     +                  <exclude>*/.csr</exclude>     +                  <exclude>*/.key</exclude>     +                  <exclude>*/.key.org</exclude>     +                  <exclude>*/.psd</exclude>     +                  <exclude>*/.json</exclude>     +                  <exclude>*/.plxarc</exclude>     +                  <exclude>**/services/brooklyn.location.LocationResolver</exclude>     芒鈧 End diff 芒鈧      Presumably these services files could have the comment at the top as well? Not sure if required. @richardcloudsoft what do you think?
Github user Nakomis commented on a diff in the pull request:      https://github.com/apache/incubator-brooklyn/pull/49#discussion_r14706576      芒鈧 Diff: pom.xml 芒鈧     @@ -678,6 +662,64 @@                          </execution>                      </executions>                  </plugin>     +            <!-- Needed for command-line access, e.g mvn apache-rat:rat and mvn apache-rat:check -->     +            <plugin>     +              <groupId>org.apache.rat</groupId>     +              <artifactId>apache-rat-plugin</artifactId>     +              <version>0.10</version>     +              <executions>     +                <execution>     +                  <phase>verify</phase>     +                  <goals>     +                    <goal>check</goal>     +                  </goals>     +                </execution>      +              </executions>     +              <configuration>     +                <!--     +                     If you wish to override this list in the component (child) pom, ensure you use     +                         <excludes combine.children="merge">     +                     so that the child pom entries replace the parent entries     +                 -->     +                <excludes combine.children="append">     +                  <!-- git and IDE project files -->     +                  <!-- see https://issues.apache.org/jira/browse/RAT-107 -->     +                  <exclude>*/.git/*</exclude>     +                  <exclude>**/.gitignore</exclude>     +                  <exclude>*/.idea/*</exclude>     +                  <exclude>*/.iml</exclude>     +                  <exclude>*/.classpath/*</exclude>     +                  <exclude>**/.project</exclude>     +                  <exclude>*/.settings/*</exclude>     +                  <exclude>*/.log</exclude>     +                  <exclude>*/brooklyn.log.*</exclude>     +                  <!-- files not requiring licence -->     +                  <exclude>ignored/**</exclude>     +                  <exclude>LICENSE.md</exclude>     +                  <exclude>**/MANIFEST.MF</exclude>     +                  <exclude>*/test-output/*</exclude>     +                  <exclude>*/.pem.pub</exclude>     +                  <exclude>*/.svg</exclude>     +                  <exclude>*/.crt</exclude>     +                  <exclude>*/.csr</exclude>     +                  <exclude>*/.key</exclude>     +                  <exclude>*/.key.org</exclude>     +                  <exclude>*/.psd</exclude>     +                  <exclude>*/.json</exclude>     芒鈧 End diff 芒鈧      I excluded json as it doesn't support comments, I had a quick look at json files in jClouds (just as an example of an Apache TLP) and their json files don't include the apache header
Github user richardcloudsoft commented on a diff in the pull request:      https://github.com/apache/incubator-brooklyn/pull/49#discussion_r14706993      芒鈧 Diff: pom.xml 芒鈧     @@ -678,6 +662,64 @@                          </execution>                      </executions>                  </plugin>     +            <!-- Needed for command-line access, e.g mvn apache-rat:rat and mvn apache-rat:check -->     +            <plugin>     +              <groupId>org.apache.rat</groupId>     +              <artifactId>apache-rat-plugin</artifactId>     +              <version>0.10</version>     +              <executions>     +                <execution>     +                  <phase>verify</phase>     +                  <goals>     +                    <goal>check</goal>     +                  </goals>     +                </execution>      +              </executions>     +              <configuration>     +                <!--     +                     If you wish to override this list in the component (child) pom, ensure you use     +                         <excludes combine.children="merge">     +                     so that the child pom entries replace the parent entries     +                 -->     +                <excludes combine.children="append">     +                  <!-- git and IDE project files -->     +                  <!-- see https://issues.apache.org/jira/browse/RAT-107 -->     +                  <exclude>*/.git/*</exclude>     +                  <exclude>**/.gitignore</exclude>     +                  <exclude>*/.idea/*</exclude>     +                  <exclude>*/.iml</exclude>     +                  <exclude>*/.classpath/*</exclude>     +                  <exclude>**/.project</exclude>     +                  <exclude>*/.settings/*</exclude>     +                  <exclude>*/.log</exclude>     +                  <exclude>*/brooklyn.log.*</exclude>     +                  <!-- files not requiring licence -->     +                  <exclude>ignored/**</exclude>     +                  <exclude>LICENSE.md</exclude>     +                  <exclude>**/MANIFEST.MF</exclude>     +                  <exclude>*/test-output/*</exclude>     +                  <exclude>*/.pem.pub</exclude>     +                  <exclude>*/.svg</exclude>     +                  <exclude>*/.crt</exclude>     +                  <exclude>*/.csr</exclude>     +                  <exclude>*/.key</exclude>     +                  <exclude>*/.key.org</exclude>     +                  <exclude>*/.psd</exclude>     +                  <exclude>*/.json</exclude>     芒鈧 End diff 芒鈧      s/jClouds/jclouds/ `</pedantic>`
Thanks. Patch applied.
This patch does not work, at least for my project. It fails because mkdirs does not create the directories, but it does not create the directories because it already exists. It should only throw that exception if the folder does not exist and it fails to create. Patch is pasted below (I tested it for my case at the very least).  Index: src/main/java/org/apache/rat/mp/RatCheckMojo.java =================================================================== 芒鈧 src/main/java/org/apache/rat/mp/RatCheckMojo.java (revision 1208465) +++ src/main/java/org/apache/rat/mp/RatCheckMojo.java (working copy) @@ -153,7 +153,7 @@      public void execute() throws MojoExecutionException, MojoFailureException      {          File parent = reportFile.getParentFile();   if(!parent.mkdirs()) { +        if (!parent.exists() && !parent.mkdirs())  {              throw new MojoExecutionException("Could not create report parent directory " + parent);          }
should be fixed with svn revision 1208763
There's a small window in the patch code which can potentially cause a failure, see https://issues.apache.org/jira/browse/JCI-67 for further details.  The checks need to be the other way round, i.e.  if(!parent.mkdirs() && !parent.exists())  { // or !isDirectory() as appropriate     throw... }
applied with svn revision 1208826
modification to pom files to ignore things in m2e
Documentation updated in r1405598 to better show what is excluded http://svn.apache.org/viewvc?view=revision&revision=1405598  We should probably open new issues if we want to exclude more files by default.
Patched pom that makes mvn clean install run through.
Since there's no component tentacles I filed the bug here (relates to email on mailing list from 2012-06-18) - sorry.
Thanks for recording the bug here.   I lack project creation karma for JIRA, so I've opened an issue. We can move the bug later.
Applied. Many thanks for supplying the patch.
really simplify verify.bsh with a verify.groovy
Applied (as part of RAT-122). Many thanks for the patch.
NOTE: patch for RAT-120 include.
Applied (as part of RAT-122). Many thanks for the patch.
NOTE it include RAT-120 and RAT-121. Could you guys ask for a git mirroring ? I will be easy for more for providing different patches.
Thanks for raising https://issues.apache.org/jira/browse/INFRA-5328
(I'm going to assume that the 'missing-license' is just for your local use)
Applied. Many thanks for the patch.
Reworked main page
Executing a freshly built 0.9-SNAPSHOT from the command line also indicates that there are no excludes:  $ mvn org.apache.rat:apache-rat-plugin:0.9-SNAPSHOT:check [INFO] Scanning for projects... [INFO]                                                                          [INFO] ------------------------------------------------------------------------ [INFO] Building some-project 1.0-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO]  [INFO] 芒鈧 apache-rat-plugin:0.9-SNAPSHOT:check (default-cli) @ some-project 芒鈧 [INFO] No excludes [INFO] Rat check: Summary of files. Unapproved: 3 unknown: 3 generated: 0 approved: 0 licence. [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 2.673s [INFO] Finished at: Tue Feb 26 20:38:26 GMT 2013 [INFO] Final Memory: 6M/245M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.rat:apache-rat-plugin:0.9-SNAPSHOT:check (default-cli) on project some-project: Too many files with unapproved license: 3 See RAT report in: /opt/development/2012/kata/temp/some-project/target/rat.txt -> [Help 1] [ERROR]  [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
The fix looks good, it (suddenly?) also ignores the .git directory. BTW: I wonder if it is better to list only ignored resources instead of the exclude patterns. Especially for the number printed this is much more interesting.
Good - the plexus dependency has been updated for this release, which is where the standard   I found printing the excludes useful for debugging, but yes, listing the ignored resources sounds useful. I'll see if it would be easy and safe to add before the release.
yup 3.0.10 include more default excludes (for git) and more performant for directories scanning. And backward compatible
I've committed a patch which prints those resources excluded and those included, for example  [DEBUG] Adding plexus default exclusions... [DEBUG] Adding exclusions often needed by Maven projects... [DEBUG] Adding exclusions often needed by projects developed in Eclipse... [DEBUG] Adding exclusions often needed by projects developed in IDEA... [DEBUG] Finished creating list of implicit excludes. [INFO] 51 implicit excludes (use -debug for more details). [DEBUG] Implicit exclude: */~ [DEBUG] Implicit exclude: */## [DEBUG] Implicit exclude: */.# [DEBUG] Implicit exclude: */%% [DEBUG] Implicit exclude: */._ [DEBUG] Implicit exclude: **/CVS [DEBUG] Implicit exclude: */CVS/* [DEBUG] Implicit exclude: **/.cvsignore [DEBUG] Implicit exclude: **/RCS [DEBUG] Implicit exclude: */RCS/* [DEBUG] Implicit exclude: **/SCCS [DEBUG] Implicit exclude: */SCCS/* [DEBUG] Implicit exclude: **/vssver.scc [DEBUG] Implicit exclude: **/project.pj [DEBUG] Implicit exclude: **/.svn [DEBUG] Implicit exclude: */.svn/* [DEBUG] Implicit exclude: **/.arch-ids [DEBUG] Implicit exclude: */.arch-ids/* [DEBUG] Implicit exclude: **/.bzr [DEBUG] Implicit exclude: */.bzr/* [DEBUG] Implicit exclude: **/.MySCMServerInfo [DEBUG] Implicit exclude: **/.DS_Store [DEBUG] Implicit exclude: **/.metadata [DEBUG] Implicit exclude: */.metadata/* [DEBUG] Implicit exclude: **/.hg [DEBUG] Implicit exclude: */.hg/* [DEBUG] Implicit exclude: **/.git [DEBUG] Implicit exclude: **/.gitignore [DEBUG] Implicit exclude: **/.gitattributes [DEBUG] Implicit exclude: */.git/* [DEBUG] Implicit exclude: **/BitKeeper [DEBUG] Implicit exclude: */BitKeeper/* [DEBUG] Implicit exclude: **/ChangeSet [DEBUG] Implicit exclude: */ChangeSet/* [DEBUG] Implicit exclude: **/_darcs [DEBUG] Implicit exclude: */_darcs/* [DEBUG] Implicit exclude: **/.darcsrepo [DEBUG] Implicit exclude: */.darcsrepo/* [DEBUG] Implicit exclude: */-darcs-backup [DEBUG] Implicit exclude: **/.darcs-temp-mail [DEBUG] Implicit exclude: target/*/ [DEBUG] Implicit exclude: cobertura.ser [DEBUG] Implicit exclude: release.properties [DEBUG] Implicit exclude: pom.xml.releaseBackup [DEBUG] Implicit exclude: .classpath [DEBUG] Implicit exclude: .project [DEBUG] Implicit exclude: .settings/*/ [DEBUG] Implicit exclude: *.iml [DEBUG] Implicit exclude: *.ipr [DEBUG] Implicit exclude: *.iws [DEBUG] Implicit exclude: .idea/*/ [INFO] No excludes explicitly specified. [DEBUG] Excluded 13 resources: [DEBUG]  - excluded target/rat.txt [DEBUG]  - excluded .git/info/exclude [DEBUG]  - excluded .git/config [DEBUG]  - excluded .git/hooks/applypatch-msg.sample [DEBUG]  - excluded .git/hooks/pre-rebase.sample [DEBUG]  - excluded .git/hooks/update.sample [DEBUG]  - excluded .git/hooks/commit-msg.sample [DEBUG]  - excluded .git/hooks/pre-commit.sample [DEBUG]  - excluded .git/hooks/pre-applypatch.sample [DEBUG]  - excluded .git/hooks/post-update.sample [DEBUG]  - excluded .git/hooks/prepare-commit-msg.sample [DEBUG]  - excluded .git/HEAD [DEBUG]  - excluded .git/description [INFO] 3 resources included [DEBUG]  - included src/test/java/org/example/AppTest.java [DEBUG]  - included src/main/java/org/example/App.java [DEBUG]  - included pom.xml [INFO] Rat check: Summary of files. Unapproved: 0 unknown: 0 generated: 0 approved: 3 licence. [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------
Could this issue be safely marked as fixed in 0.9...?  Robert
I think this is fixed by the upgrade to the plexus dependency. Please reopen if not.
Here are some useful recent discussion points:  http://mail-archives.apache.org/mod_mbox/www-legal-discuss/201302.mbox/%3C5122B834.40401@shanecurcuru.org%3E  http://mail-archives.apache.org/mod_mbox/www-legal-discuss/201302.mbox/%3CCD48D6D3.8DA73%25podence@blackducksoftware.com%3E
URL: http://svn.apache.org/r1484559 Log: RAT-128 Use the proper name for Apache License  Added:     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedAL20/   copied from r1484335, creadur/rat/trunk/apache-rat-core/src/test/resources/appliedASL20/     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedAL20/bad/aal20bad1.txt  copied unchanged from r1484335, creadur/rat/trunk/apache-rat-core/src/test/resources/appliedASL20/bad/aasl20bad1.txt     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedAL20/bad/aal20bad2.txt  copied unchanged from r1484335, creadur/rat/trunk/apache-rat-core/src/test/resources/appliedASL20/bad/aasl20bad2.txt     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedAL20/good/aal20good1.txt  copied unchanged from r1484335, creadur/rat/trunk/apache-rat-core/src/test/resources/appliedASL20/good/aasl20good1.txt Removed:     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedAL20/bad/aasl20bad1.txt     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedAL20/bad/aasl20bad2.txt     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedAL20/good/aasl20good1.txt     creadur/rat/trunk/apache-rat-core/src/test/resources/appliedASL20/ Modified:     creadur/rat/trunk/RELEASE_NOTES.txt     creadur/rat/trunk/apache-rat-core/src/main/java/org/apache/rat/analysis/license/AppliedApacheSoftwareLicense20.java     creadur/rat/trunk/apache-rat-core/src/test/java/org/apache/rat/ReportTest.java     creadur/rat/trunk/apache-rat-core/src/test/java/org/apache/rat/analysis/license/AppliedApacheSoftwareLicense20Test.java     creadur/rat/trunk/apache-rat-core/src/test/java/org/apache/rat/policy/DefaultPolicyTest.java     creadur/rat/trunk/apache-rat-core/src/test/java/org/apache/rat/report/xml/XmlReportTest.java     creadur/rat/trunk/apache-rat-core/src/test/resources/elements/Source.java     creadur/rat/trunk/apache-rat-plugin/src/test/java/org/apache/rat/mp/RatCheckMojoTest.java     creadur/rat/trunk/apache-rat-tasks/src/test/java/org/apache/rat/anttasks/ReportTest.java     creadur/rat/trunk/apache-rat-tasks/src/test/resources/antunit/report-junit.xml     creadur/rat/trunk/apache-rat-tasks/src/test/resources/antunit/report-normal-operation.xml
Fixed in r1545782.
Also http://creadur.apache.org/rat/apache-rat-plugin/examples/basic.html
URL: http://svn.apache.org/r1484565 Log: RAT-137 Website shows incorrect Maven goals in some pages  Modified:     creadur/rat/trunk/apache-rat-plugin/src/site/apt/examples/basic.apt.vm     creadur/rat/trunk/apache-rat-plugin/src/site/apt/index.apt     creadur/rat/trunk/apache-rat-plugin/src/site/apt/usage.apt.vm  URL: http://svn.apache.org/r1484568 Log: RAT-137 Website shows incorrect Maven goals in some pages  Modified:     creadur/rat/trunk/apache-rat-plugin/src/site/fml/faq.fml  Website not yet rebuilt
This has been fixed and the site has been deployed.
URL: http://svn.apache.org/r1484206 Log: RAT-140 OASISLicense allows invalid Copyright line  Modified:     creadur/rat/trunk/apache-rat-core/src/main/java/org/apache/rat/analysis/license/OASISLicense.java
Refactored arrays into lists in rev1614759.
URL: http://svn.apache.org/r1505508 Log: RAT-145 - Maven plugin should not run in the "verify" phase, but in the "validate" phase  Modified:     creadur/rat/trunk/RELEASE_NOTES.txt     creadur/rat/trunk/apache-rat-plugin/src/main/java/org/apache/rat/mp/RatCheckMojo.java
Checked in as rev1612959. Thanks for reporting this issue.
Thank you!
Fixed in r1545767.
Fixed in r1545772.
Fixed in r1545775.
Fixed in r1545780.
Fixed in r1545785.
Fixed in r1545788.
Having such warnings now too on JDK 8 with rat 0.10:  Java:   java version "1.8.0" Java(TM) SE Runtime Environment (build 1.8.0-b132) Java HotSpot(TM) 64-Bit Server VM (build 25.0-b70, mixed mode)    Maven:   Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T18:37:52+01:00) Maven home: /usr/local/share/java/maven Java version: 1.8.0, vendor: Oracle Corporation Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre Default locale: en_US, platform encoding: UTF-8 OS name: "mac os x", version: "10.9.2", arch: "x86_64", family: "mac"    Log:   Warning:  org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser: Property 'http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit' is not recognized. Compiler warnings:   WARNING:  'org.apache.xerces.jaxp.SAXParserImpl: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.' Warning:  org.apache.xerces.parsers.SAXParser: Feature 'http://javax.xml.XMLConstants/feature/secure-processing' is not recognized. Warning:  org.apache.xerces.parsers.SAXParser: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized. Warning:  org.apache.xerces.parsers.SAXParser: Property 'http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit' is not recognized.
As far as I can tell, this is nothing to do with RAT.
RAT is used extensively elsewhere without issues as far as I know.  It does not have a direct dependency on xerces. However, the plugin code does depend on doxia which in turn depends on xerces. The doxia module is part of Maven. Probably worth asking on the Maven user list.
Confirmed on Windows 7 with Maven 3.0.5 using Java 1.7.0_60 and Java 1.8.0_05. Cannot reproduce using Java 1.6.0_45. All versions are 64-bit.
Confirmed on Ubuntu 14.04, mvn 3.2.1, JDK 1.8.0.11 64bit.
This java bug seems to be related: http://bugs.java.com/bugdatabase/view_bug.do?bug_id=8016153
Following    https://blogs.oracle.com/joew/entry/jdk_7u45_aws_issue_123  http://docs.oracle.com/javase/tutorial/jaxp/limits/limits.html  http://docs.oracle.com/javase/tutorial/jaxp/properties/properties.html and defining a jaxp.properties didn't help to get rid of the compiler warnings.
I see the same problem with commons VFS site builds (using RAT) with recent Java 7 and 8. I wonder, why is external used/needed here anyway?
I was able to get this to work, but I don't know if it works in all situations:   <plugin>   <groupId>org.apache.rat</groupId>   <artifactId>apache-rat-plugin</artifactId>   <dependencies>     <dependency>       <groupId>org.apache.maven.doxia</groupId>       <artifactId>doxia-core</artifactId>       <version>1.6</version>       <exclusions>         <exclusion>           <groupId>xerces</groupId>           <artifactId>xercesImpl</artifactId>         </exclusion>       </exclusions>     </dependency>   </dependencies> </plugin>
Thank you Christopher: you found the cause and immediate workaround!  I opened a Jira issue at Doxia to remove this nasty dependency in Doxia: http://jira.codehaus.org/browse/DOXIA-526  It would be nice if next Rat version could implement the workaround, even if Doxia is not yet released with the fix at root cause
notice the workaround is now part of the future asf parent pom version 17: see MPOM-69